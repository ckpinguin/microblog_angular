File src/app/app.component.spec.ts
no filtering:
=============
      2         const titleDiv = compiled.querySelector('div /deep/
      2  .
     24 (
      4 ).
     12 ,
      5 :
     29 ;
      1 <
      3 =
      6 =>
      2 >
      3 [
      1 class 
      3 d.
      4 e.
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { AppComponent } from './
      1 import { BlogItemComponent } from './modules/blog/blog-item/
      1 import { BlogListComponent } from './modules/blog/blog-list/
      1 import { ComponentFixture, TestBed, async } from '@angular/core/
      1 import { EditBlogEntryFormComponent } from './modules/blog/edit-blog-entry-form/
      1 import { FormsModule } from '@angular/
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from './modules/shared/
      1 import { Title } from '@angular/
      3 let
      2 m.
      1 p.
      1 t.
      2 try
Total operators (unfiltered): 120

with filtering:
===============
      2         const titleDiv = compiled.querySelector('div /deep/
      2  .
     24 (
      4 ).
     12 ,
      5 :
     29 ;
      1 <
      3 =
      6 =>
      2 >
      3 [
      1 class 
      3 d.
      4 e.
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { AppComponent } from './
      1 import { BlogItemComponent } from './modules/blog/blog-item/
      1 import { BlogListComponent } from './modules/blog/blog-list/
      1 import { ComponentFixture, TestBed, async } from '@angular/core/
      1 import { EditBlogEntryFormComponent } from './modules/blog/edit-blog-entry-form/
      1 import { FormsModule } from '@angular/
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from './modules/shared/
      1 import { Title } from '@angular/
      3 let
      2 m.
      1 p.
      1 t.
      2 try
Total operators N1: 120

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { ComponentFixture, TestBed, async } from '@angular/core/testing';
import { FormsModule } from '@angular/forms';
import { RouterTestingModule } from '@angular/router/testing';
import { ActivatedRoute, Router, NavigationEnd } from '@angular/router';
import { Title } from '@angular/platform-browser';
import { AppComponent } from './app.component';
import { BlogListComponent } from './modules/blog/blog-list/blog-list.component';
import { BlogItemComponent } from './modules/blog/blog-item/blog-item.component';
import { EditBlogEntryFormComponent } from './modules/blog/edit-blog-entry-form/edit-blog-entry-form.component';
import { SharedModule } from './modules/shared/shared.module';
            imports: [

grep EXCEPTIONS:
================

File src/app/app.component.ts
no filtering:
=============
      1     styleUrls: [ './
      1     templateUrl: './
      2  .
     12 (
      4 ,
      4 :
     15 ;
      6 =
      2 =>
      2 [
      1 class 
      2 const
      3 default
      7 e.
      1 if 
      1 implements 
      1 import 'rxjs/add/operator/
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { Component, OnInit, Inject } from '@angular/
      1 import { Title } from '@angular/
      1 instanceof
      2 let
      2 p.
      4 private
      1 r.
      4 t.
      9 this
      1 while 
      1 ||
Total operators (unfiltered): 93

with filtering:
===============
      1     styleUrls: [ './
      1     templateUrl: './
      2  .
     12 (
      4 ,
      4 :
     15 ;
      6 =
      2 =>
      2 [
      1 class 
      2 const
      3 default
      7 e.
      1 if 
      1 implements 
      1 import 'rxjs/add/operator/
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { Component, OnInit, Inject } from '@angular/
      1 import { Title } from '@angular/
      1 instanceof
      2 let
      2 p.
      4 private
      1 r.
      4 t.
      9 this
      1 while 
      1 ||
Total operators N1: 93

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { Component, OnInit, Inject } from '@angular/core';
import { Title } from '@angular/platform-browser';
import { ActivatedRoute, Router, NavigationEnd } from '@angular/router';
import 'rxjs/add/operator/filter';

grep EXCEPTIONS:
================

File src/app/app.module.ts
no filtering:
=============
      1         SharedModule.forRoot() //
      1     providers: [ //
      1 (
     13 ,
      5 :
     10 ;
      3 [
      1 class 
      1 d.
      1 e.
      1 g.
      1 i.
      1 import * as tokens from './
      1 import { AppComponent } from './
      1 import { BlogService } from './modules/blog/
      1 import { BrowserAnimationsModule } from '@angular/platform-browser/
      1 import { BrowserModule, Title } from '@angular/
      1 import { LoginService } from './modules/auth/login/
      1 import { NgModule } from '@angular/
      1 import { SharedModule } from './modules/shared/
      1 import { UserService } from './modules/auth/user/
      1 import { appRouting, routingComponents, routingProviders } from './
      2 let
      1 n.
      3 p.
      1 r.
      1 s.
      1 true
Total operators (unfiltered): 58

with filtering:
===============
      1         SharedModule.forRoot() //
      1     providers: [ //
      1 (
     13 ,
      5 :
     10 ;
      3 [
      1 class 
      1 d.
      1 e.
      1 g.
      1 i.
      1 import * as tokens from './
      1 import { AppComponent } from './
      1 import { BlogService } from './modules/blog/
      1 import { BrowserAnimationsModule } from '@angular/platform-browser/
      1 import { BrowserModule, Title } from '@angular/
      1 import { LoginService } from './modules/auth/login/
      1 import { NgModule } from '@angular/
      1 import { SharedModule } from './modules/shared/
      1 import { UserService } from './modules/auth/user/
      1 import { appRouting, routingComponents, routingProviders } from './
      2 let
      1 n.
      3 p.
      1 r.
      1 s.
      1 true
Total operators N1: 58

exceptions filter:
==================
      4 //

grep COMMENTS:
==============
// The app
// Shared module
// Services
// Routing

grep FUNCS:
===========

grep SPECIALS:
==============
import { BrowserModule, Title } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import * as tokens from './app.tokens';
import { AppComponent } from './app.component';
import { SharedModule } from './modules/shared/shared.module';
import { UserService } from './modules/auth/user/user.service';
import { LoginService } from './modules/auth/login/login.service';
import { BlogService } from './modules/blog/blog.service';
import { appRouting, routingComponents, routingProviders } from './app.routing';
    imports: [

grep EXCEPTIONS:
================
// The app
// Shared module
// Services
// Routing

File src/app/app.routing.ts
no filtering:
=============
      2     //
      1     // { path : '**', redirectTo: '/
      1     { path: '', redirectTo: '/
      1     { path: 'admin', canLoad: [ LoginGuard ], loadChildren: 'app/modules/admin/
      1     { path: 'blog', loadChildren: 'app/modules/blog/
      1     { path: 'home', redirectTo: '/
      1     { path: 'login', loadChildren: 'app/modules/auth/
      1 !
      3 (
      8 ,
      6 :
      9 ;
      4 =
      3 [
      4 const
      1 e.
      2 g.
      2 h.
      1 import { AppComponent } from './
      1 import { AuthModule } from './modules/auth/
      1 import { BlogModule } from './modules/blog/
      1 import { LoginGuard } from './modules/auth/login/
      1 import { Routes, RouterModule, PreloadAllModules } from '@angular/
      2 n.
      1 p.
Total operators (unfiltered): 59

with filtering:
===============
      1     { path: '', redirectTo: '/
      1     { path: 'admin', canLoad: [ LoginGuard ], loadChildren: 'app/modules/admin/
      1     { path: 'blog', loadChildren: 'app/modules/blog/
      1     { path: 'home', redirectTo: '/
      1     { path: 'login', loadChildren: 'app/modules/auth/
      1 !
      1 (
      8 ,
      6 :
      9 ;
      4 =
      3 [
      4 const
      1 e.
      2 g.
      2 h.
      1 import { AppComponent } from './
      1 import { AuthModule } from './modules/auth/
      1 import { BlogModule } from './modules/blog/
      1 import { LoginGuard } from './modules/auth/login/
      1 import { Routes, RouterModule, PreloadAllModules } from '@angular/
      2 n.
      1 p.
Total operators N1: 54

exceptions filter:
==================
      3     //

grep COMMENTS:
==============
    // We lazy-load the modules with a preloading strategy (loads in background)
    // on top-level it must be `canLoad` instead of `canActivate` (which is still used at deeper levels)
    // { path : '**', redirectTo: '/blog' }

grep FUNCS:
===========

grep SPECIALS:
==============
import { Routes, RouterModule, PreloadAllModules } from '@angular/router';
import { AppComponent } from './app.component';
import { BlogModule } from './modules/blog/blog.module';
import { AuthModule } from './modules/auth/auth.module';
import { LoginGuard } from './modules/auth/login/login.guard';

grep EXCEPTIONS:
================
    // We lazy-load the modules with a preloading strategy (loads in background)
    // on top-level it must be `canLoad` instead of `canActivate` (which is still used at deeper levels)
    // { path : '**', redirectTo: '/blog' }

File src/app/app.tokens.ts
no filtering:
=============
      1 (
      2 ;
      1 =
      1 const
      1 import { OpaqueToken } from '@angular/
Total operators (unfiltered): 6

with filtering:
===============
      1 (
      2 ;
      1 =
      1 const
      1 import { OpaqueToken } from '@angular/
Total operators N1: 6

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { OpaqueToken } from '@angular/core';

grep EXCEPTIONS:
================

File src/app/modules/admin/admin-page/admin-page.component.spec.ts
no filtering:
=============
      1  .
     16 (
      1 ).
      3 ,
      4 :
     15 ;
      1 <
      2 =
      4 =>
      1 >
      3 [
      2 d.
      4 e.
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { AdminPageComponent } from './
      1 import { RouterTestingModule } from '@angular/router/
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      2 let
Total operators (unfiltered): 63

with filtering:
===============
      1  .
     16 (
      1 ).
      3 ,
      4 :
     15 ;
      1 <
      2 =
      4 =>
      1 >
      3 [
      2 d.
      4 e.
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { AdminPageComponent } from './
      1 import { RouterTestingModule } from '@angular/router/
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      2 let
Total operators N1: 63

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { async, ComponentFixture, TestBed } from '@angular/core/testing';
import { RouterTestingModule } from '@angular/router/testing';
import { ActivatedRoute, Router, NavigationEnd } from '@angular/router';
import { AdminPageComponent } from './admin-page.component';
            imports: [

grep EXCEPTIONS:
================

File src/app/modules/admin/admin-page/admin-page.component.ts
no filtering:
=============
      1     templateUrl: './
      3 (
      1 ,
      3 :
      4 ;
      1 class 
      1 const
      1 e.
      1 implements 
      1 import { ActivatedRoute } from '@angular/
      1 import { Component, OnInit } from '@angular/
      1 import { NgForm } from '@angular/
      2 private
      1 t.
Total operators (unfiltered): 22

with filtering:
===============
      1     templateUrl: './
      3 (
      1 ,
      3 :
      4 ;
      1 class 
      1 const
      1 e.
      1 implements 
      1 import { ActivatedRoute } from '@angular/
      1 import { Component, OnInit } from '@angular/
      1 import { NgForm } from '@angular/
      2 private
      1 t.
Total operators N1: 22

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { Component, OnInit } from '@angular/core';
import { NgForm } from '@angular/forms';
import { ActivatedRoute } from '@angular/router';

grep EXCEPTIONS:
================

File src/app/modules/admin/admin.module.ts
no filtering:
=============
      1  ...
      1 (
      3 ,
      2 :
      4 ;
      2 [
      1 class 
      1 d.
      1 e.
      1 import { AdminPageComponent } from './admin-page/
      1 import { NgModule } from '@angular/
      1 import { SharedModule } from '../shared/
      1 import { adminRouting, adminRoutingComponents } from './
      1 n.
Total operators (unfiltered): 21

with filtering:
===============
      1  ...
      1 (
      3 ,
      2 :
      4 ;
      2 [
      1 class 
      1 d.
      1 e.
      1 import { AdminPageComponent } from './admin-page/
      1 import { NgModule } from '@angular/
      1 import { SharedModule } from '../shared/
      1 import { adminRouting, adminRoutingComponents } from './
      1 n.
Total operators N1: 21

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { NgModule } from '@angular/core';
import { AdminPageComponent } from './admin-page/admin-page.component';
import { adminRouting, adminRoutingComponents } from './admin.routing';
import { SharedModule } from '../shared/shared.module';
    imports: [

grep EXCEPTIONS:
================

File src/app/modules/admin/admin.routing.ts
no filtering:
=============
      1     //
      1 (
      2 ,
      5 :
      6 ;
      4 =
      3 [
      4 const
      2 e.
      1 import { AdminPageComponent } from './admin-page/
      1 import { Routes, RouterModule } from '@angular/
      1 let
Total operators (unfiltered): 31

with filtering:
===============
      1 (
      2 ,
      5 :
      6 ;
      4 =
      3 [
      4 const
      2 e.
      1 import { AdminPageComponent } from './admin-page/
      1 import { Routes, RouterModule } from '@angular/
Total operators N1: 29

exceptions filter:
==================
      1     //

grep COMMENTS:
==============
    // path '' is the component holding the outlet

grep FUNCS:
===========

grep SPECIALS:
==============
import { Routes, RouterModule } from '@angular/router';
import { AdminPageComponent } from './admin-page/admin-page.component';

grep EXCEPTIONS:
================
    // path '' is the component holding the outlet

File src/app/modules/auth/auth-component/auth.component.spec.ts
no filtering:
=============
      1  .
     16 (
      1 ).
      3 ,
      4 :
     14 ;
      1 <
      2 =
      4 =>
      1 >
      3 [
      2 d.
      3 e.
      1 h.
      1 import { AuthComponent } from './
      1 import { RouterTestingModule } from '@angular/router/
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      2 let
Total operators (unfiltered): 61

with filtering:
===============
      1  .
     16 (
      1 ).
      3 ,
      4 :
     14 ;
      1 <
      2 =
      4 =>
      1 >
      3 [
      2 d.
      3 e.
      1 h.
      1 import { AuthComponent } from './
      1 import { RouterTestingModule } from '@angular/router/
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      2 let
Total operators N1: 61

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { async, ComponentFixture, TestBed } from '@angular/core/testing';
import { RouterTestingModule } from '@angular/router/testing';
import { AuthComponent } from './auth.component';
            imports: [

grep EXCEPTIONS:
================

File src/app/modules/auth/auth-component/auth.component.ts
no filtering:
=============
      1     template: '<router-outlet></
      1 (
      1 ,
      1 :
      1 ;
      1 >
      1 class 
      1 import { Component } from '@angular/
      1 let
Total operators (unfiltered): 9

with filtering:
===============
      1     template: '<router-outlet></
      1 (
      1 ,
      1 :
      1 ;
      1 >
      1 class 
      1 import { Component } from '@angular/
      1 let
Total operators N1: 9

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { Component } from '@angular/core';

grep EXCEPTIONS:
================

File src/app/modules/auth/auth.module.ts
no filtering:
=============
      1  ...
      1 (
      3 ,
      2 :
      5 ;
      2 [
      1 class 
      1 d.
      1 h.
      1 import { LoginFormComponent } from './login/login-form/
      1 import { NgModule } from '@angular/
      1 import { SharedModule } from '../shared/
      1 import { UserStore } from './user/
      1 import { authRouting, authRoutingComponents } from './
      1 m.
      1 r.
Total operators (unfiltered): 24

with filtering:
===============
      1  ...
      1 (
      3 ,
      2 :
      5 ;
      2 [
      1 class 
      1 d.
      1 h.
      1 import { LoginFormComponent } from './login/login-form/
      1 import { NgModule } from '@angular/
      1 import { SharedModule } from '../shared/
      1 import { UserStore } from './user/
      1 import { authRouting, authRoutingComponents } from './
      1 m.
      1 r.
Total operators N1: 24

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { NgModule } from '@angular/core';
import { LoginFormComponent } from './login/login-form/login-form.component';
import { UserStore } from './user/user.store';
import { authRouting, authRoutingComponents } from './auth.routing';
import { SharedModule } from '../shared/shared.module';
    imports: [

grep EXCEPTIONS:
================

File src/app/modules/auth/auth.routing.ts
no filtering:
=============
      1     //
      1 (
      5 ,
      8 :
      7 ;
      4 =
      4 [
      4 const
      2 e.
      1 h.
      1 import { AuthComponent } from './auth-component/
      1 import { LoginPageComponent } from './login/login-page/
      1 import { Routes, RouterModule } from '@angular/
      1 let
Total operators (unfiltered): 41

with filtering:
===============
      1 (
      5 ,
      8 :
      7 ;
      4 =
      4 [
      4 const
      2 e.
      1 h.
      1 import { AuthComponent } from './auth-component/
      1 import { LoginPageComponent } from './login/login-page/
      1 import { Routes, RouterModule } from '@angular/
Total operators N1: 39

exceptions filter:
==================
      1     //

grep COMMENTS:
==============
    // path '' is the component holding the outlet

grep FUNCS:
===========

grep SPECIALS:
==============
import { Routes, RouterModule } from '@angular/router';
import { AuthComponent } from './auth-component/auth.component';
import { LoginPageComponent } from './login/login-page/login-page.component';

grep EXCEPTIONS:
================
    // path '' is the component holding the outlet

File src/app/modules/auth/login/login-form/login-form.component.spec.ts
no filtering:
=============
      2  .
     16 (
      1 ).
     11 ,
     11 :
     19 ;
      1 <
      2 =
      4 =>
      1 >
      4 [
      2 d.
      4 e.
      1 import { LoginFormComponent } from './
      1 import { LoginService } from '../
      1 import { MockUserService } from '../../user/
      1 import { NavigationService } from '../../../shared/
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from '../../../shared/
      1 import { UserService } from '../../user/
      1 import { async, ComponentFixture, inject, TestBed } from '@angular/core/
      2 let
      1 m.
      2 n.
      2 r.
Total operators (unfiltered): 93

with filtering:
===============
      2  .
     16 (
      1 ).
     11 ,
     11 :
     19 ;
      1 <
      2 =
      4 =>
      1 >
      4 [
      2 d.
      4 e.
      1 import { LoginFormComponent } from './
      1 import { LoginService } from '../
      1 import { MockUserService } from '../../user/
      1 import { NavigationService } from '../../../shared/
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from '../../../shared/
      1 import { UserService } from '../../user/
      1 import { async, ComponentFixture, inject, TestBed } from '@angular/core/
      2 let
      1 m.
      2 n.
      2 r.
Total operators N1: 93

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { async, ComponentFixture, inject, TestBed } from '@angular/core/testing';
import { RouterTestingModule } from '@angular/router/testing';
import { SharedModule } from '../../../shared/shared.module';
import { LoginFormComponent } from './login-form.component';
import { UserService } from '../../user/user.service';
import { MockUserService } from '../../user/user.service.mock';
import { LoginService } from '../login.service';
import { NavigationService } from '../../../shared/navigation.service';
                imports: [

grep EXCEPTIONS:
================

File src/app/modules/auth/login/login-form/login-form.component.ts
no filtering:
=============
      1     @ViewChild(NgForm) form: NgForm; //
      1     styleUrls: [ './
      1     templateUrl: './
     12 (
     13 ,
     10 :
     15 ;
      3 =
      1 class 
      4 const
      1 d.
      8 e.
      1 else
      1 for 
      1 if 
      1 import { ActivatedRoute, Router } from '@angular/
      1 import { Component, EventEmitter, ViewChild } from '@angular/
      1 import { LoginService } from '../
      1 import { MdSnackBar } from '@angular/
      1 import { NavigationService } from '../../../shared/
      1 import { NgForm } from '@angular/
      4 m.
      2 n.
      5 private
      2 r.
      4 t.
      9 this
      1 y.
      1 }.
Total operators (unfiltered): 107

with filtering:
===============
      1     @ViewChild(NgForm) form: NgForm; //
      1     styleUrls: [ './
      1     templateUrl: './
     10 (
     13 ,
      8 :
     15 ;
      3 =
      1 class 
      4 const
      1 d.
      8 e.
      1 else
      1 for 
      1 if 
      1 import { ActivatedRoute, Router } from '@angular/
      1 import { Component, EventEmitter, ViewChild } from '@angular/
      1 import { LoginService } from '../
      1 import { MdSnackBar } from '@angular/
      1 import { NavigationService } from '../../../shared/
      1 import { NgForm } from '@angular/
      4 m.
      2 n.
      5 private
      2 r.
      4 t.
      9 this
      1 y.
      1 }.
Total operators N1: 103

exceptions filter:
==================
      1 ancel(cancel: boolean) {
      1 ubmit(formValue: any) {

grep COMMENTS:
==============

grep FUNCS:
===========
    onSubmit(formValue: any) {
    onCancel(cancel: boolean) {

grep SPECIALS:
==============
import { Component, EventEmitter, ViewChild } from '@angular/core';
import { NgForm } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { LoginService } from '../login.service';
import { NavigationService } from '../../../shared/navigation.service';
import { MdSnackBar } from '@angular/material';

grep EXCEPTIONS:
================
    onSubmit(formValue: any) {
    onCancel(cancel: boolean) {

File src/app/modules/auth/login/login-page/login-page.component.spec.ts
no filtering:
=============
      1  .
     16 (
      1 ).
     12 ,
     11 :
     20 ;
      1 <
      2 =
      4 =>
      1 >
      4 [
      3 d.
      5 e.
      1 import { LoginFormComponent } from '../login-form/
      1 import { LoginPageComponent } from './
      1 import { LoginService } from '../
      1 import { MockUserService } from '../../user/
      1 import { NavigationService } from '../../../shared/
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from '../../../shared/
      1 import { UserService } from '../../user/
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      2 let
      1 m.
      2 n.
      2 r.
Total operators (unfiltered): 97

with filtering:
===============
      1  .
     16 (
      1 ).
     12 ,
     11 :
     20 ;
      1 <
      2 =
      4 =>
      1 >
      4 [
      3 d.
      5 e.
      1 import { LoginFormComponent } from '../login-form/
      1 import { LoginPageComponent } from './
      1 import { LoginService } from '../
      1 import { MockUserService } from '../../user/
      1 import { NavigationService } from '../../../shared/
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from '../../../shared/
      1 import { UserService } from '../../user/
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      2 let
      1 m.
      2 n.
      2 r.
Total operators N1: 97

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { async, ComponentFixture, TestBed } from '@angular/core/testing';
import { RouterTestingModule } from '@angular/router/testing';
import { SharedModule } from '../../../shared/shared.module';
import { LoginPageComponent } from './login-page.component';
import { LoginFormComponent } from '../login-form/login-form.component';
import { LoginService } from '../login.service';
import { UserService } from '../../user/user.service';
import { MockUserService } from '../../user/user.service.mock';
import { NavigationService } from '../../../shared/navigation.service';
            imports: [

grep EXCEPTIONS:
================

File src/app/modules/auth/login/login-page/login-page.component.ts
no filtering:
=============
      1             //
      1     templateUrl: './
      2 !
      1 !=
     12 (
      4 ,
      5 :
     18 ;
      8 =
      1 =>
      1 [
      3 a.
      1 class 
      1 const
      7 e.
      1 else
      2 false
      4 if 
      1 implements 
      1 import debug from '../../../../../
      1 import { ActivatedRoute } from '@angular/
      1 import { Component, OnInit } from '@angular/
      1 import { LoginService } from '../
      1 import { NgForm } from '@angular/
      1 import { User } from '../../user/
      1 n.
      3 private
      1 r.
      2 t.
     10 this
      2 true
Total operators (unfiltered): 99

with filtering:
===============
      1     templateUrl: './
      1 !
      1 !=
     10 (
      4 ,
      5 :
     18 ;
      8 =
      1 =>
      1 [
      3 a.
      1 class 
      1 const
      6 e.
      1 else
      2 false
      3 if 
      1 implements 
      1 import debug from '../../../../../
      1 import { ActivatedRoute } from '@angular/
      1 import { Component, OnInit } from '@angular/
      1 import { LoginService } from '../
      1 import { NgForm } from '@angular/
      1 import { User } from '../../user/
      1 n.
      3 private
      1 r.
      2 t.
      9 this
      2 true
Total operators N1: 92

exceptions filter:
==================
      1             //
      1 n()) {

grep COMMENTS:
==============
            // A user is already logged in

grep FUNCS:
===========
        if (!this.loginService.isLoggedIn()) {

grep SPECIALS:
==============
import { Component, OnInit } from '@angular/core';
import { NgForm } from '@angular/forms';
import { ActivatedRoute } from '@angular/router';
import { LoginService } from '../login.service';
import { User } from '../../user/model-interfaces';
import debug from '../../../../../debug';

grep EXCEPTIONS:
================
        if (!this.loginService.isLoggedIn()) {
            // A user is already logged in

File src/app/modules/auth/login/login.guard.ts
no filtering:
=============
      1             this.router.navigate([ '/
      1      RouterStateSnapshot, Route, Router } from '@angular/
      1 !
     11 (
      7 ,
     10 :
     11 ;
      2 <
      2 =
      2 >
      1 class 
      3 const
      2 e.
      1 false
      1 if 
      1 implements 
      1 import 
      1 import { Injectable } from '@angular/
      1 import { LoginService } from './
      1 import { Observable } from 'rxjs/
      1 n.
      3 private
      4 return
      1 t.
      3 this
      1 true
      2 |
Total operators (unfiltered): 76

with filtering:
===============
      1             this.router.navigate([ '/
      1      RouterStateSnapshot, Route, Router } from '@angular/
      8 (
      7 ,
      9 :
     11 ;
      2 <
      2 =
      2 >
      1 class 
      3 const
      1 e.
      1 false
      1 implements 
      1 import 
      1 import { Injectable } from '@angular/
      1 import { LoginService } from './
      1 import { Observable } from 'rxjs/
      1 n.
      2 private
      4 return
      1 t.
      2 this
      1 true
      2 |
Total operators N1: 67

exceptions filter:
==================
      1 n()) {
      1 ogin(redirect: string) {

grep COMMENTS:
==============

grep FUNCS:
===========
    private checkLogin(redirect: string) {
        if (!this.loginService.isLoggedIn()) {

grep SPECIALS:
==============
import { Injectable } from '@angular/core';
import { CanActivate, CanLoad, ActivatedRouteSnapshot,
import { Observable } from 'rxjs/Observable';
import { LoginService } from './login.service';

grep EXCEPTIONS:
================
    private checkLogin(redirect: string) {
        if (!this.loginService.isLoggedIn()) {

File src/app/modules/auth/login/login.service.mock.ts
no filtering:
=============
      1                 result = true; //
      1     //
      1 !
     23 (
      4 ).
      3 ,
     13 :
     24 ;
      3 <
      9 =
      1 ==
      3 =>
      3 >
      1 ?
      1 class 
      1 const
      1 do
      4 e.
      1 else
      5 false
      1 if 
      1 import 
      1 import { BehaviorSubject } from 'rxjs/
      1 import { Injectable } from '@angular/
      1 import { Observable } from 'rxjs/
      1 import { User } from '../user/
      1 import { UserService } from '../user/
      1 let
      3 private
      1 public
      7 r.
      4 return
     12 this
      1 true
Total operators (unfiltered): 139

with filtering:
===============
      1                 result = true; //
      1 !
     22 (
      4 ).
      3 ,
     11 :
     24 ;
      3 <
      9 =
      1 ==
      3 =>
      3 >
      1 ?
      1 class 
      1 do
      4 e.
      1 else
      5 false
      1 if 
      1 import 
      1 import { BehaviorSubject } from 'rxjs/
      1 import { Injectable } from '@angular/
      1 import { Observable } from 'rxjs/
      1 import { User } from '../user/
      1 import { UserService } from '../user/
      1 let
      2 private
      1 public
      7 r.
      4 return
     11 this
      1 true
Total operators N1: 132

exceptions filter:
==================
      1     //
      1 constructor(private userService: UserService) {

grep COMMENTS:
==============
    // TODO: rewrite this to work with subscribing

grep FUNCS:
===========
    constructor(private userService: UserService) { }

grep SPECIALS:
==============
import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import { Observable } from 'rxjs/Observable';
import { User } from '../user/model-interfaces';
import { UserService } from '../user/user.service';
import md5 from 'md5';

grep EXCEPTIONS:
================
    constructor(private userService: UserService) { }
    // TODO: rewrite this to work with subscribing

File src/app/modules/auth/login/login.service.spec.ts
no filtering:
=============
     10 (
      1 ).
      6 ,
      4 :
      9 ;
      3 =>
      2 [
      1 d.
      1 e.
      1 import { LoginService } from './
      1 import { MockUserService } from '../user/
      1 import { TestBed, inject } from '@angular/core/
      1 import { UserService } from '../user/
      1 n.
      2 r.
Total operators (unfiltered): 44

with filtering:
===============
     10 (
      1 ).
      6 ,
      4 :
      9 ;
      3 =>
      2 [
      1 d.
      1 e.
      1 import { LoginService } from './
      1 import { MockUserService } from '../user/
      1 import { TestBed, inject } from '@angular/core/
      1 import { UserService } from '../user/
      1 n.
      2 r.
Total operators N1: 44

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { TestBed, inject } from '@angular/core/testing';
import { LoginService } from './login.service';
import { UserService } from '../user/user.service';
import { MockUserService } from '../user/user.service.mock';

grep EXCEPTIONS:
================

File src/app/modules/auth/login/login.service.ts
no filtering:
=============
      1                 result = true; //
      1     //
      1 !
     25 (
      4 ).
      3 ,
     13 :
     25 ;
      3 <
      9 =
      1 ==
      3 =>
      3 >
      1 ?
      1 class 
      1 const
      1 do
      4 e.
      1 else
      5 false
      3 if 
      1 import 
      1 import debug from '../../../../
      1 import { BehaviorSubject } from 'rxjs/
      1 import { Injectable } from '@angular/
      1 import { Observable } from 'rxjs/
      1 import { User } from '../user/
      1 import { UserService } from '../user/
      1 let
      3 private
      1 public
      7 r.
      4 return
     12 this
      1 true
Total operators (unfiltered): 145

with filtering:
===============
      1                 result = true; //
      1 !
     24 (
      4 ).
      3 ,
     11 :
     25 ;
      3 <
      9 =
      1 ==
      3 =>
      3 >
      1 ?
      1 class 
      1 do
      4 e.
      1 else
      5 false
      3 if 
      1 import 
      1 import debug from '../../../../
      1 import { BehaviorSubject } from 'rxjs/
      1 import { Injectable } from '@angular/
      1 import { Observable } from 'rxjs/
      1 import { User } from '../user/
      1 import { UserService } from '../user/
      1 let
      2 private
      1 public
      7 r.
      4 return
     11 this
      1 true
Total operators N1: 138

exceptions filter:
==================
      1     //
      1 constructor(private userService: UserService) {

grep COMMENTS:
==============
    // TODO: rewrite this to work with subscribing

grep FUNCS:
===========
    constructor(private userService: UserService) { }

grep SPECIALS:
==============
import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import { Observable } from 'rxjs/Observable';
import { User } from '../user/model-interfaces';
import { UserService } from '../user/user.service';
import md5 from 'md5';
import debug from '../../../../debug';

grep EXCEPTIONS:
================
    constructor(private userService: UserService) { }
    // TODO: rewrite this to work with subscribing

File src/app/modules/auth/user/initialUsers.ts
no filtering:
=============
      8 ,
      8 :
      2 ;
      1 =
      1 [
      1 const
      2 e.
      1 import { User } from './
      1 n.
      1 t.
Total operators (unfiltered): 26

with filtering:
===============
      8 ,
      8 :
      2 ;
      1 =
      1 [
      1 const
      2 e.
      1 import { User } from './
      1 n.
      1 t.
Total operators N1: 26

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { User } from './model-interfaces';

grep EXCEPTIONS:
================

File src/app/modules/auth/user/model-interfaces.ts
no filtering:
=============
      4 :
      4 ;
      4 ?
      1 interface 
Total operators (unfiltered): 13

with filtering:
===============
      4 :
      4 ;
      4 ?
      1 interface 
Total operators N1: 13

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============

grep EXCEPTIONS:
================

File src/app/modules/auth/user/user.service.mock.ts
no filtering:
=============
      1     //
      1  -
      2  .
      3 $.
     13 (
      9 :
     10 ;
      7 <
      3 =
      2 ==
      5 =>
      7 >
      2 [
      1 class 
      1 const
      1 e.
      1 import { BehaviorSubject } from 'rxjs/
      1 import { Injectable } from '@angular/
      1 import { Observable } from 'rxjs/
      1 import { User } from './
      1 import { initialUsers } from './
      6 public
      2 r.
      3 return
      1 t.
      3 this
      1 |
Total operators (unfiltered): 89

with filtering:
===============
      1  -
      2  .
      3 $.
     13 (
      8 :
     10 ;
      7 <
      3 =
      2 ==
      5 =>
      7 >
      2 [
      1 class 
      1 const
      1 e.
      1 import { BehaviorSubject } from 'rxjs/
      1 import { Injectable } from '@angular/
      1 import { Observable } from 'rxjs/
      1 import { User } from './
      1 import { initialUsers } from './
      5 public
      2 r.
      3 return
      1 t.
      3 this
      1 |
Total operators N1: 86

exceptions filter:
==================
      1     //

grep COMMENTS:
==============
    // This is the public API:

grep FUNCS:
===========

grep SPECIALS:
==============
import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import { Observable } from 'rxjs/Observable';
import { User } from './model-interfaces';
import { initialUsers } from './initialUsers';

grep EXCEPTIONS:
================
    // This is the public API:

File src/app/modules/auth/user/user.service.spec.ts
no filtering:
=============
     10 (
      1 ).
      4 ,
      2 :
      8 ;
      3 =>
      2 [
      1 d.
      1 import { TestBed, inject } from '@angular/core/
      1 import { UserService } from './
      1 import { UserStore } from './
      2 r.
Total operators (unfiltered): 36

with filtering:
===============
     10 (
      1 ).
      4 ,
      2 :
      8 ;
      3 =>
      2 [
      1 d.
      1 import { TestBed, inject } from '@angular/core/
      1 import { UserService } from './
      1 import { UserStore } from './
      2 r.
Total operators N1: 36

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { TestBed, inject } from '@angular/core/testing';
import { UserService } from './user.service';
import { UserStore } from './user.store';

grep EXCEPTIONS:
================

File src/app/modules/auth/user/user.service.ts
no filtering:
=============
      1         const users = initialUsers; //
      1         this.findUsers(); //
      1         this.users$ = userStore.users$; //
      2     //
      1  -
      2  .
      4 $.
     22 (
      4 ,
     23 :
     18 ;
      6 <
      3 =
      2 ==
      5 =>
      6 >
      1 ?
      1 [
      1 class 
      2 const
      5 e.
      1 if 
      1 import debug from '../../../../
      1 import { BehaviorSubject } from 'rxjs/
      1 import { Injectable } from '@angular/
      1 import { LOAD, ADD, EDIT, REMOVE, UserStore } from './
      1 import { Observable } from 'rxjs/
      1 import { User } from './
      1 import { initialUsers } from './
      1 let
      2 private
      8 public
      4 r.
      5 return
      1 t.
      9 this
      1 |
Total operators (unfiltered): 150

with filtering:
===============
      1         const users = initialUsers; //
      1         this.findUsers(); //
      1         this.users$ = userStore.users$; //
      1  -
      2  .
      4 $.
     21 (
      3 ,
     20 :
     18 ;
      6 <
      3 =
      2 ==
      5 =>
      6 >
      1 ?
      1 [
      1 class 
      1 const
      5 e.
      1 if 
      1 import debug from '../../../../
      1 import { BehaviorSubject } from 'rxjs/
      1 import { Injectable } from '@angular/
      1 import { LOAD, ADD, EDIT, REMOVE, UserStore } from './
      1 import { Observable } from 'rxjs/
      1 import { User } from './
      1 import { initialUsers } from './
      1 let
      1 private
      7 public
      4 r.
      4 return
      1 t.
      8 this
      1 |
Total operators N1: 138

exceptions filter:
==================
      2     //
      1 constructor(private userStore: UserStore) {

grep COMMENTS:
==============
    // This is the public API:
    // TODO: use search params to filter data, at the moment this just return all data

grep FUNCS:
===========
    constructor(private userStore: UserStore) {

grep SPECIALS:
==============
import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import { Observable } from 'rxjs/Observable';
import { User } from './model-interfaces';
import { initialUsers } from './initialUsers';
import { LOAD, ADD, EDIT, REMOVE, UserStore } from './user.store';
import debug from '../../../../debug';

grep EXCEPTIONS:
================
    constructor(private userStore: UserStore) {
    // This is the public API:
    // TODO: use search params to filter data, at the moment this just return all data

File src/app/modules/auth/user/user.store.ts
no filtering:
=============
      1         this.users = this.reduce(this.users, action); //
      1         this.users$.next(this.users); //
      2  .
      5  ...
      2 !=
     28 (
      1 *
     12 +
      8 ,
     12 :
     22 ;
      6 <
     10 =
      4 =>
      6 >
      4 [
      4 case
      1 class 
      6 const
      1 default
      1 do
      4 e.
      2 h.
      3 if 
      1 import debug from '../../../../
      1 import { BehaviorSubject } from 'rxjs/
      1 import { User } from './
      8 n.
      1 private
      1 public
     10 return
      2 s.
      1 static
      1 switch 
      8 try
Total operators (unfiltered): 181

with filtering:
===============
      1         this.users = this.reduce(this.users, action); //
      1         this.users$.next(this.users); //
      2  .
      5  ...
      2 !=
     26 (
      1 *
     12 +
      7 ,
     11 :
     22 ;
      5 <
     10 =
      4 =>
      5 >
      4 [
      4 case
      1 class 
      6 const
      1 default
      1 do
      4 e.
      2 h.
      3 if 
      1 import debug from '../../../../
      1 import { BehaviorSubject } from 'rxjs/
      1 import { User } from './
      8 n.
      1 private
      1 public
     10 return
      2 s.
      1 static
      1 switch 
      8 try
Total operators N1: 175

exceptions filter:
==================
      1 dispatch(action) {
      1 reduce(users: Array<User>, action) {

grep COMMENTS:
==============

grep FUNCS:
===========
    dispatch(action) {
    reduce(users: Array<User>, action) {

grep SPECIALS:
==============
import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import { User } from './model-interfaces';
import debug from '../../../../debug';

grep EXCEPTIONS:
================
    dispatch(action) {
    reduce(users: Array<User>, action) {

File src/app/modules/blog/blog-item/blog-item.component.spec.ts
no filtering:
=============
      1  .
     16 (
      1 ).
      8 ,
      7 :
     17 ;
      1 <
      2 =
      4 =>
      1 >
      4 [
      3 d.
      4 e.
      2 g.
      1 import { BlogItemComponent } from './
      1 import { BlogService } from '../
      1 import { MockBlogService } from '../
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from '../../shared/
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      2 let
      1 m.
Total operators (unfiltered): 80

with filtering:
===============
      1  .
     16 (
      1 ).
      8 ,
      7 :
     17 ;
      1 <
      2 =
      4 =>
      1 >
      4 [
      3 d.
      4 e.
      2 g.
      1 import { BlogItemComponent } from './
      1 import { BlogService } from '../
      1 import { MockBlogService } from '../
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from '../../shared/
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      2 let
      1 m.
Total operators N1: 80

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { async, ComponentFixture, TestBed } from '@angular/core/testing';
import { RouterTestingModule } from '@angular/router/testing';
import { SharedModule } from '../../shared/shared.module';
import { BlogItemComponent } from './blog-item.component';
import { MockBlogService } from '../blog.service.mock';
import { BlogService } from '../blog.service';
            imports: [

grep EXCEPTIONS:
================

File src/app/modules/blog/blog-item/blog-item.component.ts
no filtering:
=============
      1                      : this.item; //
      1                      ? this.item = this.blogService.getEntry(id) //
      1                 this.item = ('undefined' === typeof this.item) //
      3         //
      1         // this.router.navigate([ '/
      1         // this.router.navigateByUrl(`/blog/edit/(blogeditoutlet:edit/
      1         // this.router.navigateByUrl(`blog/edit/
      1         // this.router.navigateByUrl(`blog/item/${id}/
      1         return 'assets/images/
      1         this.router.navigate([ './
      1     styleUrls: [ './
      1     templateUrl: './
      1  .
     15 (
      1 +
     10 ,
     13 :
     21 ;
      3 =
      1 =>
      2 [
      1 class 
      3 const
      4 e.
      1 g.
      2 if 
      1 implements 
      1 import debug from '../../../../
      1 import { ActivatedRoute, Router } from '@angular/
      1 import { BlogEntry } from '../
      1 import { BlogService } from '../
      1 import { Component, OnInit, OnDestroy, Input } from '@angular/
      1 import { Subscription } from 'rxjs/
      4 let
      3 m.
      1 n.
      4 private
      2 t.
      6 this
      3 try
      1 ||
Total operators (unfiltered): 123

with filtering:
===============
      1                      : this.item; //
      1                      ? this.item = this.blogService.getEntry(id) //
      1                 this.item = ('undefined' === typeof this.item) //
      1         return 'assets/images/
      1         this.router.navigate([ './
      1     styleUrls: [ './
      1     templateUrl: './
      1  .
     12 (
      1 +
      7 ,
      9 :
     16 ;
      3 =
      1 =>
      1 [
      1 class 
      3 const
      3 e.
      1 g.
      2 if 
      1 implements 
      1 import debug from '../../../../
      1 import { ActivatedRoute, Router } from '@angular/
      1 import { BlogEntry } from '../
      1 import { BlogService } from '../
      1 import { Component, OnInit, OnDestroy, Input } from '@angular/
      1 import { Subscription } from 'rxjs/
      1 let
      3 m.
      1 n.
      4 private
      2 t.
      5 this
      2 try
      1 ||
Total operators N1: 94

exceptions filter:
==================
      7         //
      1 dit(id: string) {
      1 elete(id: string) {

grep COMMENTS:
==============
        // this.router.navigate([ '/blog',
        //     { outlets: { 'blogeditoutlet':  [ 'blog', 'edit', id ] } } ]
        // );
        // this.router.navigateByUrl(`/blog/edit/(blogeditoutlet:edit/${id})`);
        // this.router.navigateByUrl(`blog/edit/${id}`);
        // this.blogService.startEditingEntry(id);
        // this.router.navigateByUrl(`blog/item/${id}/edit`);

grep FUNCS:
===========
    onEdit(id: string) {
    onDelete(id: string) {

grep SPECIALS:
==============
import { Component, OnInit, OnDestroy, Input } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { Subscription } from 'rxjs/Subscription';
import { BlogEntry } from '../model-interfaces';
import { BlogService } from '../blog.service';
import debug from '../../../../debug';

grep EXCEPTIONS:
================
    onEdit(id: string) {
        // this.router.navigate([ '/blog',
        //     { outlets: { 'blogeditoutlet':  [ 'blog', 'edit', id ] } } ]
        // );
        // this.router.navigateByUrl(`/blog/edit/(blogeditoutlet:edit/${id})`);
        // this.router.navigateByUrl(`blog/edit/${id}`);
        // this.blogService.startEditingEntry(id);
        // this.router.navigateByUrl(`blog/item/${id}/edit`);
    onDelete(id: string) {

File src/app/modules/blog/blog-list/blog-list.component.spec.ts
no filtering:
=============
     16 (
      2 ).
     10 ,
      7 :
     20 ;
      1 <
      2 =
      4 =>
      1 >
      4 [
      3 d.
      4 e.
      2 g.
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { BlogItemComponent } from '../blog-item/
      1 import { BlogListComponent } from './
      1 import { BlogService } from '../
      1 import { FormsModule } from '@angular/
      1 import { MockBlogService } from '../
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from '../../shared/
      1 import { async, inject, ComponentFixture, TestBed } from '@angular/core/
      2 let
      1 m.
      1 t.
Total operators (unfiltered): 89

with filtering:
===============
     16 (
      2 ).
     10 ,
      7 :
     20 ;
      1 <
      2 =
      4 =>
      1 >
      4 [
      3 d.
      4 e.
      2 g.
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { BlogItemComponent } from '../blog-item/
      1 import { BlogListComponent } from './
      1 import { BlogService } from '../
      1 import { FormsModule } from '@angular/
      1 import { MockBlogService } from '../
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from '../../shared/
      1 import { async, inject, ComponentFixture, TestBed } from '@angular/core/
      2 let
      1 m.
      1 t.
Total operators N1: 89

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { async, inject, ComponentFixture, TestBed } from '@angular/core/testing';
import { FormsModule } from '@angular/forms';
import { RouterTestingModule } from '@angular/router/testing';
import { ActivatedRoute, Router, NavigationEnd } from '@angular/router';
import { SharedModule } from '../../shared/shared.module';
import { BlogListComponent } from './blog-list.component';
import { BlogItemComponent } from '../blog-item/blog-item.component';
import { BlogService } from '../blog.service';
import { MockBlogService } from '../blog.service.mock';
            imports: [

grep EXCEPTIONS:
================

File src/app/modules/blog/blog-list/blog-list.component.ts
no filtering:
=============
      1     templateUrl: './
      3 (
      2 ,
      3 :
      6 ;
      2 <
      1 =
      2 >
      1 class 
      1 const
      1 e.
      1 g.
      1 implements 
      1 import { BlogEntry } from '../
      1 import { BlogService } from '../
      1 import { Component, OnInit, Input, Inject } from '@angular/
      1 import { Observable } from 'rxjs/
      1 private
      2 t.
      2 this
      1 try
Total operators (unfiltered): 35

with filtering:
===============
      1     templateUrl: './
      3 (
      2 ,
      3 :
      6 ;
      2 <
      1 =
      2 >
      1 class 
      1 const
      1 e.
      1 g.
      1 implements 
      1 import { BlogEntry } from '../
      1 import { BlogService } from '../
      1 import { Component, OnInit, Input, Inject } from '@angular/
      1 import { Observable } from 'rxjs/
      1 private
      2 t.
      2 this
      1 try
Total operators N1: 35

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { Component, OnInit, Input, Inject } from '@angular/core';
import { Observable } from 'rxjs/Observable';
import { BlogEntry } from '../model-interfaces';
import { BlogService } from '../blog.service';

grep EXCEPTIONS:
================

File src/app/modules/blog/blog-page/blog-page.component.spec.ts
no filtering:
=============
      1                 { provide: APP_BASE_HREF, useValue: '/
      1         const titleText = compiled.querySelector('div /deep/
      2  .
     22 (
      3 ).
     13 ,
     18 :
     25 ;
      1 <
      3 =
      5 =>
      2 >
      4 [
      3 d.
      7 e.
      2 g.
      1 import { APP_BASE_HREF } from '@angular/
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { BlogPageComponent } from './
      1 import { BlogService } from '../
      1 import { MockBlogService } from '../
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from '../../shared/
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      3 let
      1 t.
Total operators (unfiltered): 124

with filtering:
===============
      1                 { provide: APP_BASE_HREF, useValue: '/
      1         const titleText = compiled.querySelector('div /deep/
      2  .
     22 (
      3 ).
     13 ,
     18 :
     25 ;
      1 <
      3 =
      5 =>
      2 >
      4 [
      3 d.
      7 e.
      2 g.
      1 import { APP_BASE_HREF } from '@angular/
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { BlogPageComponent } from './
      1 import { BlogService } from '../
      1 import { MockBlogService } from '../
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from '../../shared/
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      3 let
      1 t.
Total operators N1: 124

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { async, ComponentFixture, TestBed } from '@angular/core/testing';
import { ActivatedRoute, Router, NavigationEnd } from '@angular/router';
import { RouterTestingModule } from '@angular/router/testing';
import { APP_BASE_HREF } from '@angular/common';
import { BlogPageComponent } from './blog-page.component';
import { SharedModule } from '../../shared/shared.module';
import { BlogService } from '../blog.service';
import { MockBlogService } from '../blog.service.mock';
            imports: [

grep EXCEPTIONS:
================

File src/app/modules/blog/blog-page/blog-page.component.ts
no filtering:
=============
      1                 if (event['url'].split('/
      1     //
      1     styleUrls: [ './
      1     templateUrl: './
      2  .
     13 (
      2 ).
      7 ,
     10 :
     19 ;
      7 =
      1 ==
      3 =>
      1 [
      1 class 
      1 const
      7 e.
      1 else
      3 false
      1 g.
      2 if 
      1 implements 
      1 import debug from '../../../../
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { BlogEntry } from '../
      1 import { BlogService } from '../
      1 import { Component, OnInit } from '@angular/
      1 instanceof
      6 private
      1 r.
      3 t.
     11 this
      1 true
      9 try
Total operators (unfiltered): 123

with filtering:
===============
      1     styleUrls: [ './
      1     templateUrl: './
      2  .
     12 (
      1 ).
      6 ,
      9 :
     19 ;
      6 =
      3 =>
      1 [
      1 class 
      1 const
      7 e.
      1 else
      3 false
      1 g.
      2 if 
      1 implements 
      1 import debug from '../../../../
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { BlogEntry } from '../
      1 import { BlogService } from '../
      1 import { Component, OnInit } from '@angular/
      1 instanceof
      5 private
      1 r.
      3 t.
     11 this
      1 true
      9 try
Total operators N1: 114

exceptions filter:
==================
      1     //
      1 split('/').pop() === 'new') {

grep COMMENTS:
==============
    // When using AOT, all members used in the template must not be private:

grep FUNCS:
===========
                if (event['url'].split('/').pop() === 'new') {

grep SPECIALS:
==============
import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router, NavigationEnd } from '@angular/router';
import { BlogService } from '../blog.service';
import { BlogEntry } from '../model-interfaces';
import debug from '../../../../debug';

grep EXCEPTIONS:
================
    // When using AOT, all members used in the template must not be private:
                if (event['url'].split('/').pop() === 'new') {

File src/app/modules/blog/blog.module.ts
no filtering:
=============
      1 (
      5 ,
      2 :
      5 ;
      2 [
      1 class 
      1 d.
      1 g.
      1 import { BlogItemComponent } from './blog-item/
      1 import { BlogListComponent } from './blog-list/
      1 import { NgModule } from '@angular/
      1 import { SharedModule } from '../shared/
      1 import { blogRouting, blogRoutingComponents } from './
      1 m.
      1 t.
Total operators (unfiltered): 25

with filtering:
===============
      1 (
      5 ,
      2 :
      5 ;
      2 [
      1 class 
      1 d.
      1 g.
      1 import { BlogItemComponent } from './blog-item/
      1 import { BlogListComponent } from './blog-list/
      1 import { NgModule } from '@angular/
      1 import { SharedModule } from '../shared/
      1 import { blogRouting, blogRoutingComponents } from './
      1 m.
      1 t.
Total operators N1: 25

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { NgModule } from '@angular/core';
import { BlogListComponent } from './blog-list/blog-list.component';
import { BlogItemComponent } from './blog-item/blog-item.component';
import { blogRouting, blogRoutingComponents } from './blog.routing';
import { SharedModule } from '../shared/shared.module';
    imports: [

grep EXCEPTIONS:
================

File src/app/modules/blog/blog.routing.ts
no filtering:
=============
      1                 //
      1             // outlet: 'list-outlet', // aux outlet not working, bug: https://github.com/angular/angular/issues/
      1         // { path: 'items', component: BlogListComponent, outlet: 'list-outlet' }, //
      1         { path: '', component: BlogListComponent, outlet: 'list-outlet' }, //
      1         { path: ':id', // component: BlogItemComponent, //
      2 (
     19 ,
     20 :
     10 ;
      4 =
      7 [
      4 const
      2 e.
      1 import { BlogItemComponent } from './blog-item/
      1 import { BlogListComponent } from './blog-list/
      1 import { BlogPageComponent } from './blog-page/
      1 import { EditBlogEntryFormComponent } from './edit-blog-entry-form/
      1 import { LoginGuard } from '../auth/login/
      1 import { Routes, RouterModule } from '@angular/
      2 let
      2 m.
      1 n.
      1 t.
      6 try
Total operators (unfiltered): 91

with filtering:
===============
      1         { path: '', component: BlogListComponent, outlet: 'list-outlet' }, //
      1         { path: ':id', // component: BlogItemComponent, //
      1 (
     16 ,
     18 :
     10 ;
      4 =
      7 [
      4 const
      2 e.
      1 import { BlogItemComponent } from './blog-item/
      1 import { BlogListComponent } from './blog-list/
      1 import { BlogPageComponent } from './blog-page/
      1 import { EditBlogEntryFormComponent } from './edit-blog-entry-form/
      1 import { LoginGuard } from '../auth/login/
      1 import { Routes, RouterModule } from '@angular/
      1 let
      2 m.
      1 n.
      1 t.
      6 try
Total operators N1: 81

exceptions filter:
==================
      1                 //
      1             //
      1         //

grep COMMENTS:
==============
        // { path: 'items', component: BlogListComponent, outlet: 'list-outlet' }, // here, aux-outlet is NOT working (see bugs in github)
            // outlet: 'list-outlet', // aux outlet not working, bug: https://github.com/angular/angular/issues/9957
                // { path: '', component: BlogItemComponent },

grep FUNCS:
===========

grep SPECIALS:
==============
import { Routes, RouterModule } from '@angular/router';
import { BlogPageComponent } from './blog-page/blog-page.component';
import { BlogListComponent } from './blog-list/blog-list.component';
import { BlogItemComponent } from './blog-item/blog-item.component';
import { EditBlogEntryFormComponent } from './edit-blog-entry-form/edit-blog-entry-form.component';
import { LoginGuard } from '../auth/login/login.guard';

grep EXCEPTIONS:
================
        // { path: 'items', component: BlogListComponent, outlet: 'list-outlet' }, // here, aux-outlet is NOT working (see bugs in github)
            // outlet: 'list-outlet', // aux outlet not working, bug: https://github.com/angular/angular/issues/9957
                // { path: '', component: BlogItemComponent },

File src/app/modules/blog/blog.service.mock.ts
no filtering:
=============
      1  -
      3  .
      2 $.
     25 (
      1 *
     12 +
      6 :
     15 ;
      6 <
      4 =
      1 ==
      5 =>
      6 >
      1 [
      1 class 
      2 const
      2 do
      1 e.
      2 h.
      3 import 'rxjs/add/operator/
      1 import { BehaviorSubject } from 'rxjs/
      1 import { BlogEntry } from './
      1 import { Injectable } from '@angular/
      1 import { Observable } from 'rxjs/
      1 import { initialEntries } from './
      4 public
      4 return
      1 static
      1 t.
      2 this
     10 try
      1 |
Total operators (unfiltered): 127

with filtering:
===============
      1  -
      3  .
      2 $.
     25 (
      1 *
     12 +
      6 :
     15 ;
      6 <
      4 =
      1 ==
      5 =>
      6 >
      1 [
      1 class 
      2 const
      2 do
      1 e.
      2 h.
      3 import 'rxjs/add/operator/
      1 import { BehaviorSubject } from 'rxjs/
      1 import { BlogEntry } from './
      1 import { Injectable } from '@angular/
      1 import { Observable } from 'rxjs/
      1 import { initialEntries } from './
      4 public
      4 return
      1 static
      1 t.
      2 this
     10 try
      1 |
Total operators N1: 127

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import { Observable } from 'rxjs/Observable';
import 'rxjs/add/operator/find';
import 'rxjs/add/operator/do';
import 'rxjs/add/operator/map';
import { BlogEntry } from './model-interfaces';
import { initialEntries } from './initialEntries';

grep EXCEPTIONS:
================

File src/app/modules/blog/blog.service.spec.ts
no filtering:
=============
     10 (
      1 ).
      4 ,
      2 :
      8 ;
      3 =>
      2 [
      1 d.
      2 g.
      1 import { BlogService } from './
      1 import { BlogStore } from './
      1 import { TestBed, inject } from '@angular/core/
Total operators (unfiltered): 36

with filtering:
===============
     10 (
      1 ).
      4 ,
      2 :
      8 ;
      3 =>
      2 [
      1 d.
      2 g.
      1 import { BlogService } from './
      1 import { BlogStore } from './
      1 import { TestBed, inject } from '@angular/core/
Total operators N1: 36

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { TestBed, inject } from '@angular/core/testing';
import { BlogService } from './blog.service';
import { BlogStore } from './blog.store';

grep EXCEPTIONS:
================

File src/app/modules/blog/blog.service.ts
no filtering:
=============
      1         const entries = initialEntries; //
      1         this.entries$ = blogStore.entries$; //
      1         this.findEntries(); //
      2     //
      1  -
      3  .
      3 $.
     34 (
      1 *
     12 +
      4 ,
     21 :
     23 ;
      5 <
      4 =
      1 ==
      5 =>
      5 >
      1 ?
      1 [
      1 class 
      3 const
      2 do
      5 e.
      1 g.
      2 h.
      1 if 
      3 import 'rxjs/add/operator/
      1 import debug from '../../../
      1 import { BehaviorSubject } from 'rxjs/
      1 import { BlogEntry } from './
      1 import { Injectable } from '@angular/
      1 import { LOAD, ADD, EDIT, REMOVE, BlogStore } from './
      1 import { Observable } from 'rxjs/
      1 import { initialEntries } from './
      1 let
      1 private
      8 public
      6 return
      1 static
      1 t.
      8 this
     17 try
      1 |
Total operators (unfiltered): 198

with filtering:
===============
      1         const entries = initialEntries; //
      1         this.entries$ = blogStore.entries$; //
      1         this.findEntries(); //
      1  -
      3  .
      3 $.
     33 (
      1 *
     12 +
      3 ,
     18 :
     23 ;
      5 <
      4 =
      1 ==
      5 =>
      5 >
      1 ?
      1 [
      1 class 
      2 const
      2 do
      5 e.
      1 g.
      2 h.
      1 if 
      3 import 'rxjs/add/operator/
      1 import debug from '../../../
      1 import { BehaviorSubject } from 'rxjs/
      1 import { BlogEntry } from './
      1 import { Injectable } from '@angular/
      1 import { LOAD, ADD, EDIT, REMOVE, BlogStore } from './
      1 import { Observable } from 'rxjs/
      1 import { initialEntries } from './
      1 let
      7 public
      5 return
      1 static
      1 t.
      7 this
     17 try
      1 |
Total operators N1: 186

exceptions filter:
==================
      2     //
      1 constructor(private blogStore: BlogStore) {

grep COMMENTS:
==============
    // This is the public API:
    // TODO: use search params to filter data, at the moment this just return all data

grep FUNCS:
===========
    constructor(private blogStore: BlogStore) {

grep SPECIALS:
==============
import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import { Observable } from 'rxjs/Observable';
import 'rxjs/add/operator/find';
import 'rxjs/add/operator/do';
import 'rxjs/add/operator/map';
import debug from '../../../debug';
import { BlogEntry } from './model-interfaces';
import { initialEntries } from './initialEntries';
import { LOAD, ADD, EDIT, REMOVE, BlogStore } from './blog.store';

grep EXCEPTIONS:
================
    constructor(private blogStore: BlogStore) {
    // This is the public API:
    // TODO: use search params to filter data, at the moment this just return all data

File src/app/modules/blog/blog.store.ts
no filtering:
=============
      1         this.entries = this.reduce(this.entries, action); //
      1         this.entries$.next(this.entries); //
      2  .
      5  ...
      2 !=
     28 (
      1 *
     12 +
      8 ,
     12 :
     22 ;
      6 <
     10 =
      4 =>
      6 >
      4 [
      4 case
      1 class 
      6 const
      1 default
      1 do
      4 e.
      2 h.
      3 if 
      1 import debug from '../../../
      1 import { BehaviorSubject } from 'rxjs/
      1 import { BlogEntry } from './
      8 n.
      1 private
      1 public
     10 return
      2 s.
      1 static
      1 switch 
     12 try
Total operators (unfiltered): 185

with filtering:
===============
      1         this.entries = this.reduce(this.entries, action); //
      1         this.entries$.next(this.entries); //
      2  .
      5  ...
      2 !=
     26 (
      1 *
     12 +
      7 ,
     11 :
     22 ;
      5 <
     10 =
      4 =>
      5 >
      4 [
      4 case
      1 class 
      6 const
      1 default
      1 do
      4 e.
      2 h.
      3 if 
      1 import debug from '../../../
      1 import { BehaviorSubject } from 'rxjs/
      1 import { BlogEntry } from './
      8 n.
      1 private
      1 public
     10 return
      2 s.
      1 static
      1 switch 
     11 try
Total operators N1: 178

exceptions filter:
==================
      1 dispatch(action) {
      1 reduce(entries: Array<BlogEntry>, action) {

grep COMMENTS:
==============

grep FUNCS:
===========
    dispatch(action) {
    reduce(entries: Array<BlogEntry>, action) {

grep SPECIALS:
==============
import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import debug from '../../../debug';
import { BlogEntry } from './model-interfaces';

grep EXCEPTIONS:
================
    dispatch(action) {
    reduce(entries: Array<BlogEntry>, action) {

File src/app/modules/blog/edit-blog-entry-form/edit-blog-entry-form.component.spec.ts
no filtering:
=============
      1             //
      1             const form = component.form.form; //
      4         //
     35 (
      6 ).
     20 ,
     20 :
     39 ;
      1 <
      5 =
      8 =>
      1 >
      9 [
      1 const
      3 d.
      1 do
     10 e.
      2 g.
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { BlogService } from '../
      1 import { EditBlogEntryFormComponent } from './
      1 import { FormsModule } from '@angular/
      1 import { LoginService } from '../../auth/login/
      1 import { MdSnackBar } from '@angular/
      1 import { MockBlogService } from '../
      1 import { MockLoginService } from '../../auth/login/
      1 import { MockUserService } from '../../auth/user/
      1 import { NoopAnimationsModule } from '@angular/platform-browser/
      1 import { Observable } from 'rxjs/
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from '../../shared/
      1 import { UserService } from '../../auth/user/
      1 import { async, inject, ComponentFixture, TestBed } from '@angular/core/
      3 l.
      3 let
      2 m.
      2 n.
      3 r.
      1 t.
      1 true
     12 try
Total operators (unfiltered): 209

with filtering:
===============
      1             const form = component.form.form; //
     31 (
      5 ).
     19 ,
     19 :
     35 ;
      1 <
      4 =
      7 =>
      1 >
      9 [
      1 const
      3 d.
      8 e.
      2 g.
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { BlogService } from '../
      1 import { EditBlogEntryFormComponent } from './
      1 import { FormsModule } from '@angular/
      1 import { LoginService } from '../../auth/login/
      1 import { MdSnackBar } from '@angular/
      1 import { MockBlogService } from '../
      1 import { MockLoginService } from '../../auth/login/
      1 import { MockUserService } from '../../auth/user/
      1 import { NoopAnimationsModule } from '@angular/platform-browser/
      1 import { Observable } from 'rxjs/
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from '../../shared/
      1 import { UserService } from '../../auth/user/
      1 import { async, inject, ComponentFixture, TestBed } from '@angular/core/
      3 l.
      3 let
      2 m.
      2 n.
      3 r.
      1 true
      6 try
Total operators N1: 181

exceptions filter:
==================
      1             //
      4         //

grep COMMENTS:
==============
        // blogService.getEntry('dc2a4182-71a0-4fed-98dd-22b4d5104e40').subscribe(entry => {
        //     console.log('test setting entry to: ', entry);
        //     component.entry = entry;
        // });
            // done();

grep FUNCS:
===========

grep SPECIALS:
==============
import { async, inject, ComponentFixture, TestBed } from '@angular/core/testing';
import { FormsModule } from '@angular/forms';
import { Observable } from 'rxjs/Rx';
import { RouterTestingModule } from '@angular/router/testing';
import { ActivatedRoute, Router, NavigationEnd } from '@angular/router';
import { MdSnackBar } from '@angular/material';
import { NoopAnimationsModule } from '@angular/platform-browser/animations';
import { EditBlogEntryFormComponent } from './edit-blog-entry-form.component';
import { SharedModule } from '../../shared/shared.module';
import { BlogService } from '../blog.service';
import { MockBlogService } from '../blog.service.mock';
import { LoginService } from '../../auth/login/login.service';
import { MockLoginService } from '../../auth/login/login.service.mock';
import { UserService } from '../../auth/user/user.service';
import { MockUserService } from '../../auth/user/user.service.mock';
            imports: [

grep EXCEPTIONS:
================
        // blogService.getEntry('dc2a4182-71a0-4fed-98dd-22b4d5104e40').subscribe(entry => {
        //     console.log('test setting entry to: ', entry);
        //     component.entry = entry;
        // });
            // done();

File src/app/modules/blog/edit-blog-entry-form/edit-blog-entry-form.component.ts
no filtering:
=============
      1         this.router.navigate([ '..' ]); // Bug: Goes back to /
      1         this.router.navigate([ '..' ]); // Bug?: Goes back to /
      2     //
      1     @Input() inputEntry: BlogEntry; //
      1     @ViewChild(NgForm) form: NgForm; //
      1     styleUrls: [ './
      1     templateUrl: './
      4  .
      2  ...
      4 !
      2 !=
      1 &&
     34 (
      1 ).
     21 ,
     20 :
     33 ;
     13 =
      2 ==
      4 =>
      1 ?
      2 [
      1 ].
      1 class 
      2 const
      9 e.
      5 false
      1 for 
      1 g.
      5 if 
      1 implements 
      2 import 
      1 import 'rxjs/add/operator/
      1 import debug from '../../../../
      1 import { ActivatedRoute, Router } from '@angular/
      1 import { BlogEntry } from '../
      1 import { BlogService } from '../
      1 import { LoginService } from '../../auth/login/
      1 import { MdSnackBar } from '@angular/
      1 import { NgForm } from '@angular/
      1 import { Subscription } from 'rxjs/
      3 m.
      1 n.
      8 private
      1 r.
      5 return
      4 t.
     27 this
      1 true
     33 try
      1 } from '@angular/
Total operators (unfiltered): 273

with filtering:
===============
      1         this.router.navigate([ '..' ]); // Bug: Goes back to /
      1         this.router.navigate([ '..' ]); // Bug?: Goes back to /
      1     @Input() inputEntry: BlogEntry; //
      1     @ViewChild(NgForm) form: NgForm; //
      1     styleUrls: [ './
      1     templateUrl: './
      4  .
      2  ...
      3 !
      2 !=
      1 &&
     31 (
      1 ).
     21 ,
     17 :
     33 ;
     13 =
      2 ==
      4 =>
      1 ?
      2 [
      1 ].
      1 class 
      2 const
      9 e.
      5 false
      1 for 
      1 g.
      5 if 
      1 implements 
      2 import 
      1 import 'rxjs/add/operator/
      1 import debug from '../../../../
      1 import { ActivatedRoute, Router } from '@angular/
      1 import { BlogEntry } from '../
      1 import { BlogService } from '../
      1 import { LoginService } from '../../auth/login/
      1 import { MdSnackBar } from '@angular/
      1 import { NgForm } from '@angular/
      1 import { Subscription } from 'rxjs/
      3 m.
      1 n.
      8 private
      1 r.
      5 return
      4 t.
     27 this
      1 true
     30 try
      1 } from '@angular/
Total operators N1: 261

exceptions filter:
==================
      2     //
      1 entry(entry: BlogEntry) {
      1 ubmit(formValue: any) {

grep COMMENTS:
==============
    // TODO: find a way to mark the form as pristine when
    // cancelling (still keeping the old values!)

grep FUNCS:
===========
    set entry(entry: BlogEntry) {
    onSubmit(formValue: any) {

grep SPECIALS:
==============
import {
import { NgForm } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { Subscription } from 'rxjs/Subscription';
import 'rxjs/add/operator/mergeMap';
import debug from '../../../../debug';
import { MdSnackBar } from '@angular/material';
import _ from 'lodash';
import { BlogEntry } from '../model-interfaces';
import { BlogService } from '../blog.service';
import { LoginService } from '../../auth/login/login.service';

grep EXCEPTIONS:
================
    set entry(entry: BlogEntry) {
    onSubmit(formValue: any) {
    // TODO: find a way to mark the form as pristine when
    // cancelling (still keeping the old values!)

File src/app/modules/blog/initialEntries.ts
no filtering:
=============
     24 ,
     31 :
      2 ;
      1 =
      4 [
      1 const
      1 import { BlogEntry } from './
      1 try
      3 1.
      1 2.
      1 3.
Total operators (unfiltered): 70

with filtering:
===============
     24 ,
     31 :
      2 ;
      1 =
      4 [
      1 const
      1 import { BlogEntry } from './
      1 try
      3 1.
      1 2.
      1 3.
Total operators N1: 70

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { BlogEntry } from './model-interfaces';

grep EXCEPTIONS:
================

File src/app/modules/blog/model-interfaces.ts
no filtering:
=============
      1     author?: string; //
      1     user?: string; //
      1  */
      1 (
      3 *
      1 ,
      7 :
      7 ;
      7 ?
      1 [
      1 for 
      2 interface 
      1 try
Total operators (unfiltered): 34

with filtering:
===============
      1     author?: string; //
      1     user?: string; //
      1 (
      7 :
      7 ;
      7 ?
      1 [
      2 interface 
      1 try
Total operators N1: 28

exceptions filter:
==================
      2  *
      1 /**

grep COMMENTS:
==============
/**
 * In Typescript, interfaces are only used for type-safety
 */

grep FUNCS:
===========

grep SPECIALS:
==============

grep EXCEPTIONS:
================
/**
 * In Typescript, interfaces are only used for type-safety
 */

File src/app/modules/shared/dateFormat.pipe.ts
no filtering:
=============
      6 (
      2 ,
      3 :
      7 ;
      3 =
      1 M.
      1 class 
      2 const
      1 d.
      1 e.
      1 implements 
      1 import { DatePipe } from '@angular/
      1 import { Inject, LOCALE_ID, Pipe, PipeTransform } from '@angular/
      1 return
      2 this
Total operators (unfiltered): 33

with filtering:
===============
      3 (
      2 ,
      2 :
      7 ;
      3 =
      1 M.
      1 class 
      1 const
      1 d.
      1 e.
      1 implements 
      1 import { DatePipe } from '@angular/
      1 import { Inject, LOCALE_ID, Pipe, PipeTransform } from '@angular/
      1 return
      2 this
Total operators N1: 28

exceptions filter:
==================
      1 constructor(@Inject(LOCALE_ID) locale_id) {
      1 transform(value: string) {

grep COMMENTS:
==============

grep FUNCS:
===========
    constructor(@Inject(LOCALE_ID) locale_id) {
    transform(value: string) {

grep SPECIALS:
==============
import { Inject, LOCALE_ID, Pipe, PipeTransform } from '@angular/core';
import { DatePipe } from '@angular/common';

grep EXCEPTIONS:
================
    constructor(@Inject(LOCALE_ID) locale_id) {
    transform(value: string) {

File src/app/modules/shared/navbar/navbar.component.spec.ts
no filtering:
=============
      1  .
     15 (
      1 ).
      2 ,
      3 :
     13 ;
      1 <
      2 =
      4 =>
      1 >
      1 [
      2 d.
      2 e.
      1 import { NavBarComponent } from './
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      2 let
      1 r.
Total operators (unfiltered): 53

with filtering:
===============
      1  .
     15 (
      1 ).
      2 ,
      3 :
     13 ;
      1 <
      2 =
      4 =>
      1 >
      1 [
      2 d.
      2 e.
      1 import { NavBarComponent } from './
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      2 let
      1 r.
Total operators N1: 53

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { async, ComponentFixture, TestBed } from '@angular/core/testing';
import { NavBarComponent } from './navbar.component';

grep EXCEPTIONS:
================

File src/app/modules/shared/navbar/navbar.component.ts
no filtering:
=============
      1     styleUrls: [ './
      1     templateUrl: './
      1 (
      3 ,
      1 :
      1 ;
      1 class 
      1 import { Component } from '@angular/
      2 r.
      2 t.
Total operators (unfiltered): 14

with filtering:
===============
      1     styleUrls: [ './
      1     templateUrl: './
      1 (
      3 ,
      1 :
      1 ;
      1 class 
      1 import { Component } from '@angular/
      2 r.
      2 t.
Total operators N1: 14

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { Component } from '@angular/core';

grep EXCEPTIONS:
================

File src/app/modules/shared/navigation.service.ts
no filtering:
=============
      1         //
      1         const redirect = queryParams['redirect'] || '/
      1         this.router.navigate([ '..' ]); // Bug: Goes back to /
      6 (
      1 ,
      2 :
      5 ;
      1 =
      1 class 
      2 const
      1 e.
      1 import { ActivatedRoute, Router } from '@angular/
      1 import { Injectable } from '@angular/
      2 private
      1 r.
      1 t.
      2 this
Total operators (unfiltered): 30

with filtering:
===============
      1         const redirect = queryParams['redirect'] || '/
      1         this.router.navigate([ '..' ]); // Bug: Goes back to /
      4 (
      1 ,
      2 :
      4 ;
      1 class 
      1 const
      1 import { ActivatedRoute, Router } from '@angular/
      1 import { Injectable } from '@angular/
      2 private
      1 r.
      1 this
Total operators N1: 21

exceptions filter:
==================
      1         //
      1 ack(queryParams) {
      1 ome(queryParams) {

grep COMMENTS:
==============
        // const queryParams = this.activatedRoute.snapshot.queryParams;

grep FUNCS:
===========
    navigateHome(queryParams) {
    navigateBack(queryParams) {

grep SPECIALS:
==============
import { Injectable } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';

grep EXCEPTIONS:
================
    navigateHome(queryParams) {
        // const queryParams = this.activatedRoute.snapshot.queryParams;
    navigateBack(queryParams) {

File src/app/modules/shared/shared.module.ts
no filtering:
=============
      5     //
      2 !
      4 (
     23 ,
      1 // module, even services that ought to be available shared/
      7 :
     17 ;
      4 [
      1 class 
      1 do
      1 e.
      1 for 
      3 g.
      2 import 
      1 import { BlogService } from '../blog/
      1 import { BlogStore } from '../blog/
      1 import { CommonModule } from '@angular/
      1 import { DateFormatPipe } from './
      1 import { FormsModule } from '@angular/
      1 import { HttpModule } from '@angular/
      1 import { LoginGuard } from '../auth/login/
      1 import { LoginService } from '../auth/login/
      1 import { MdSnackBarModule } from '@angular/
      1 import { ModuleWithProviders, NgModule } from '@angular/
      1 import { NavBarComponent } from './navbar/
      1 import { NavigationService } from './
      1 import { RouterModule } from '@angular/
      1 import { ShowErrorComponent } from './show-error/
      1 import { UserService } from '../auth/user/
      1 import { UserStore } from '../auth/user/
      1 l.
      4 n.
      4 r.
      1 return
      2 static
      1 t.
Total operators (unfiltered): 101

with filtering:
===============
      2 (
     21 ,
      6 :
     17 ;
      4 [
      1 class 
      2 g.
      1 import { BlogService } from '../blog/
      1 import { BlogStore } from '../blog/
      1 import { CommonModule } from '@angular/
      1 import { DateFormatPipe } from './
      1 import { FormsModule } from '@angular/
      1 import { HttpModule } from '@angular/
      1 import { LoginGuard } from '../auth/login/
      1 import { LoginService } from '../auth/login/
      1 import { MdSnackBarModule } from '@angular/
      1 import { ModuleWithProviders, NgModule } from '@angular/
      1 import { NavBarComponent } from './navbar/
      1 import { NavigationService } from './
      1 import { RouterModule } from '@angular/
      1 import { ShowErrorComponent } from './show-error/
      1 import { UserService } from '../auth/user/
      1 import { UserStore } from '../auth/user/
      3 n.
      4 r.
      1 return
      1 static
      1 t.
Total operators N1: 79

exceptions filter:
==================
      5     //
      7 //

grep COMMENTS:
==============
// Some services from their respective modules need to be availabe
// for other modules too, so we import them here. This still is
// not a clean solution. This has to do with the quite special
// concept of a "module" in angular: The module in the first place
// is about handling lazy-loading, not about organizing. Even though
// it makes sense to have everything located in the corresponding
// module, even services that ought to be available shared/global.
    // Service providers have to be put here instead of
    // the @NgModule annotation! This static addition to the
    // Module has to be imported in root App Module only!
    // The other modules only import the Module itself (without
    // forRoot() )

grep FUNCS:
===========

grep SPECIALS:
==============
import { ModuleWithProviders, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { HttpModule } from '@angular/http';
import { RouterModule } from '@angular/router';
import { MdSnackBarModule } from '@angular/material';
import { NavBarComponent } from './navbar/navbar.component';
import { ShowErrorComponent } from './show-error/show-error.component';
import { DateFormatPipe } from './dateFormat.pipe';
import { NavigationService } from './navigation.service';
// for other modules too, so we import them here. This still is
import { BlogService } from '../blog/blog.service';
import { BlogStore } from '../blog/blog.store';
import { LoginService } from '../auth/login/login.service';
import { UserService } from '../auth/user/user.service';
import { UserStore } from '../auth/user/user.store';
import { LoginGuard } from '../auth/login/login.guard';
    imports: [
    // Module has to be imported in root App Module only!
    // The other modules only import the Module itself (without

grep EXCEPTIONS:
================
// Some services from their respective modules need to be availabe
// for other modules too, so we import them here. This still is
// not a clean solution. This has to do with the quite special
// concept of a "module" in angular: The module in the first place
// is about handling lazy-loading, not about organizing. Even though
// it makes sense to have everything located in the corresponding
// module, even services that ought to be available shared/global.
    // Service providers have to be put here instead of
    // the @NgModule annotation! This static addition to the
    // Module has to be imported in root App Module only!
    // The other modules only import the Module itself (without
    // forRoot() )

File src/app/modules/shared/show-error/show-error.component.spec.ts
no filtering:
=============
      1             providers: [NgForm], //
     15 (
      2 ).
      2 ,
      3 :
     14 ;
      1 <
      2 =
      4 =>
      1 >
      1 [
      2 d.
      2 e.
      1 import { NgForm } from '@angular/
      1 import { ShowErrorComponent } from './
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      2 let
      1 r.
Total operators (unfiltered): 56

with filtering:
===============
      1             providers: [NgForm], //
     15 (
      2 ).
      2 ,
      3 :
     14 ;
      1 <
      2 =
      4 =>
      1 >
      1 [
      2 d.
      2 e.
      1 import { NgForm } from '@angular/
      1 import { ShowErrorComponent } from './
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      2 let
      1 r.
Total operators N1: 56

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { async, ComponentFixture, TestBed } from '@angular/core/testing';
import { NgForm } from '@angular/forms';
import { ShowErrorComponent } from './show-error.component';

grep EXCEPTIONS:
================

File src/app/modules/shared/show-error/show-error.component.ts
no filtering:
=============
      1     styleUrls: [ './
      1     templateUrl: './
      3 !
     14 (
      2 ,
      7 :
     18 ;
     10 =
      3 [
      2 break
      2 case
      1 class 
      7 const
      1 default
      1 for 
      2 if 
      1 import { Component, Input } from '@angular/
      1 import { NgForm, FormGroup } from '@angular/
      5 l.
      1 let
      2 m.
      1 private
      3 r.
      2 return
      2 s.
      1 switch 
      2 t.
      4 this
      2 ||
Total operators (unfiltered): 102

with filtering:
===============
      1     styleUrls: [ './
      1     templateUrl: './
      3 !
     13 (
      2 ,
      6 :
     18 ;
     10 =
      3 [
      2 break
      2 case
      1 class 
      6 const
      1 default
      1 for 
      2 if 
      1 import { Component, Input } from '@angular/
      1 import { NgForm, FormGroup } from '@angular/
      5 l.
      1 let
      2 m.
      3 r.
      2 return
      2 s.
      1 switch 
      2 t.
      4 this
      2 ||
Total operators N1: 98

exceptions filter:
==================
      1 constructor(private ngForm: NgForm) {

grep COMMENTS:
==============

grep FUNCS:
===========
    constructor(private ngForm: NgForm) { }

grep SPECIALS:
==============
import { Component, Input } from '@angular/core';
import { NgForm, FormGroup } from '@angular/forms';

grep EXCEPTIONS:
================
    constructor(private ngForm: NgForm) { }

File src/debug.ts
no filtering:
=============
      2 ;
      1 =
      1 const
      1 default
      1 false
Total operators (unfiltered): 6

with filtering:
===============
      2 ;
      1 =
      1 const
      1 default
      1 false
Total operators N1: 6

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============

grep EXCEPTIONS:
================

File src/environments/environment.prod.ts
no filtering:
=============
      1 :
      1 ;
      1 =
      1 const
      1 true
Total operators (unfiltered): 5

with filtering:
===============
      1 :
      1 ;
      1 =
      1 const
      1 true
Total operators N1: 5

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============

grep EXCEPTIONS:
================

File src/environments/environment.ts
no filtering:
=============
      1  -
      1 ,
      1 :
      1 ;
      2 =
      2 `.
      1 const
      3 d.
      1 default
      1 do
      1 false
      1 for 
      1 i.
      1 if 
      2 t.
Total operators (unfiltered): 20

with filtering:
===============
      1 :
      1 ;
      1 =
      1 const
      1 false
Total operators N1: 5

exceptions filter:
==================
      4 //

grep COMMENTS:
==============
// The file contents for the current environment will overwrite these during build.
// The build system defaults to the dev environment which uses `environment.ts`, but if you do
// `ng build --env=prod` then `environment.prod.ts` will be used instead.
// The list of which env maps to which file can be found in `.angular-cli.json`.

grep FUNCS:
===========

grep SPECIALS:
==============

grep EXCEPTIONS:
================
// The file contents for the current environment will overwrite these during build.
// The build system defaults to the dev environment which uses `environment.ts`, but if you do
// `ng build --env=prod` then `environment.prod.ts` will be used instead.
// The list of which env maps to which file can be found in `.angular-cli.json`.

File src/main.ts
no filtering:
=============
      4 (
      1 ).
      6 ;
      1 if 
      1 import { AppModule } from './app/
      1 import { enableProdMode } from '@angular/
      1 import { environment } from './environments/
      1 import { platformBrowserDynamic } from '@angular/
      1 p.
      1 t.
Total operators (unfiltered): 18

with filtering:
===============
      4 (
      1 ).
      6 ;
      1 if 
      1 import { AppModule } from './app/
      1 import { enableProdMode } from '@angular/
      1 import { environment } from './environments/
      1 import { platformBrowserDynamic } from '@angular/
      1 p.
      1 t.
Total operators N1: 18

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { enableProdMode } from '@angular/core';
import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
import { AppModule } from './app/app.module';
import { environment } from './environments/environment';

grep EXCEPTIONS:
================

File src/polyfills.ts
no filtering:
=============
      1  * Learn more in https://angular.io/docs/ts/latest/guide/
      5  */
      4  -
      1 (
    318 *
      8 ,
      1 /** ALL Firefox browsers require the following to support `@angular/animation`. **/
      1 /** Evergreen browsers require these. **/
      1 /** IE10 and IE11 requires the following for NgClass support on SVG elements */
      1 /** IE10 and IE11 requires the following to support `@angular/animation`. */
      1 /** IE9, IE10 and IE11 requires all of the following polyfills. **/
      1 // import 'classlist.js';  //
     13 // import 'core-js/es6/
      1 // import 'intl';  //
      2 // import 'web-animations-js';  //
      2 :
     16 ;
      3 >=
      1 I.
      4 `.
      3 e.
      1 f.
      1 for 
      1 import 'core-js/es6/
      1 import 'core-js/es7/
      1 import 'zone.js/dist/zone';  //
      1 p.
      5 s.
      2 t.
      1 this
      1 1.
      1 2.
Total operators (unfiltered): 404

with filtering:
===============
      2 ;
      1 I.
      1 import 'core-js/es6/
      1 import 'core-js/es7/
      1 import 'zone.js/dist/zone';  //
Total operators N1: 6

exceptions filter:
==================
     23  *
     10 /**
     17 //

grep COMMENTS:
==============
/**
 * This file includes polyfills needed by Angular and is loaded before the app.
 * You can add your own extra polyfills to this file.
 *
 * This file is divided into 2 sections:
 *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.
 *   2. Application imports. Files imported after ZoneJS that should be loaded before your main
 *      file.
 *
 * The current setup is for so-called "evergreen" browsers; the last versions of browsers that
 * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),
 * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.
 *
 * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html
 */
/***************************************************************************************************
 * BROWSER POLYFILLS
 */
/** IE9, IE10 and IE11 requires all of the following polyfills. **/
// import 'core-js/es6/symbol';
// import 'core-js/es6/object';
// import 'core-js/es6/function';
// import 'core-js/es6/parse-int';
// import 'core-js/es6/parse-float';
// import 'core-js/es6/number';
// import 'core-js/es6/math';
// import 'core-js/es6/string';
// import 'core-js/es6/date';
// import 'core-js/es6/array';
// import 'core-js/es6/regexp';
// import 'core-js/es6/map';
// import 'core-js/es6/set';
/** IE10 and IE11 requires the following for NgClass support on SVG elements */
// import 'classlist.js';  // Run `npm install --save classlist.js`.
/** IE10 and IE11 requires the following to support `@angular/animation`. */
// import 'web-animations-js';  // Run `npm install --save web-animations-js`.
/** Evergreen browsers require these. **/
/** ALL Firefox browsers require the following to support `@angular/animation`. **/
// import 'web-animations-js';  // Run `npm install --save web-animations-js`.
/***************************************************************************************************
 * Zone JS is required by Angular itself.
 */
/***************************************************************************************************
 * APPLICATION IMPORTS
 */
/**
 * Date, currency, decimal and percent pipes.
 * Needed for: All but Chrome, Firefox, Edge, IE11 and Safari 10
 */
// import 'intl';  // Run `npm install --save intl`.

grep FUNCS:
===========

grep SPECIALS:
==============
 *   2. Application imports. Files imported after ZoneJS that should be loaded before your main
// import 'core-js/es6/symbol';
// import 'core-js/es6/object';
// import 'core-js/es6/function';
// import 'core-js/es6/parse-int';
// import 'core-js/es6/parse-float';
// import 'core-js/es6/number';
// import 'core-js/es6/math';
// import 'core-js/es6/string';
// import 'core-js/es6/date';
// import 'core-js/es6/array';
// import 'core-js/es6/regexp';
// import 'core-js/es6/map';
// import 'core-js/es6/set';
// import 'classlist.js';  // Run `npm install --save classlist.js`.
// import 'web-animations-js';  // Run `npm install --save web-animations-js`.
import 'core-js/es6/reflect';
import 'core-js/es7/reflect';
// import 'web-animations-js';  // Run `npm install --save web-animations-js`.
import 'zone.js/dist/zone';  // Included with Angular CLI.
// import 'intl';  // Run `npm install --save intl`.

grep EXCEPTIONS:
================
/**
 * This file includes polyfills needed by Angular and is loaded before the app.
 * You can add your own extra polyfills to this file.
 *
 * This file is divided into 2 sections:
 *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.
 *   2. Application imports. Files imported after ZoneJS that should be loaded before your main
 *      file.
 *
 * The current setup is for so-called "evergreen" browsers; the last versions of browsers that
 * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),
 * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.
 *
 * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html
 */
/***************************************************************************************************
 * BROWSER POLYFILLS
 */
/** IE9, IE10 and IE11 requires all of the following polyfills. **/
// import 'core-js/es6/symbol';
// import 'core-js/es6/object';
// import 'core-js/es6/function';
// import 'core-js/es6/parse-int';
// import 'core-js/es6/parse-float';
// import 'core-js/es6/number';
// import 'core-js/es6/math';
// import 'core-js/es6/string';
// import 'core-js/es6/date';
// import 'core-js/es6/array';
// import 'core-js/es6/regexp';
// import 'core-js/es6/map';
// import 'core-js/es6/set';
/** IE10 and IE11 requires the following for NgClass support on SVG elements */
// import 'classlist.js';  // Run `npm install --save classlist.js`.
/** IE10 and IE11 requires the following to support `@angular/animation`. */
// import 'web-animations-js';  // Run `npm install --save web-animations-js`.
/** Evergreen browsers require these. **/
/** ALL Firefox browsers require the following to support `@angular/animation`. **/
// import 'web-animations-js';  // Run `npm install --save web-animations-js`.
/***************************************************************************************************
 * Zone JS is required by Angular itself.
 */
/***************************************************************************************************
 * APPLICATION IMPORTS
 */
/**
 * Date, currency, decimal and percent pipes.
 * Needed for: All but Chrome, Firefox, Edge, IE11 and Safari 10
 */
// import 'intl';  // Run `npm install --save intl`.

File src/test.ts
no filtering:
=============
      1  .
      7 (
      2 ).
      4 ,
      2 :
     15 ;
      1 =
      2 _.
      1 a.
      1 const context = require.context('./', true, /\.spec\.ts$/
      1 e.
      1 f.
      1 for 
      1 import 
      6 import 'zone.js/dist/
      1 import { getTestBed } from '@angular/core/
      3 s.
      2 t.
      3 y.
      1 } from '@angular/platform-browser-dynamic/
Total operators (unfiltered): 56

with filtering:
===============
      6 (
      2 ).
      2 ,
      2 :
     14 ;
      1 _.
      1 const context = require.context('./', true, /\.spec\.ts$/
      1 import 
      6 import 'zone.js/dist/
      1 import { getTestBed } from '@angular/core/
      1 t.
      1 y.
      1 } from '@angular/platform-browser-dynamic/
Total operators N1: 39

exceptions filter:
==================
      7 //
      1 function 

grep COMMENTS:
==============
// This file is required by karma.conf.js and loads recursively all the .spec and framework files
// Unfortunately there's no typing for the `__karma__` variable. Just declare it as any.
// Prevent Karma from running prematurely.
// First, initialize the Angular testing environment.
// Then we find all the tests.
// And load the modules.
// Finally, start Karma to run the tests.

grep FUNCS:
===========
__karma__.loaded = function () {};

grep SPECIALS:
==============
import 'zone.js/dist/long-stack-trace-zone';
import 'zone.js/dist/proxy.js';
import 'zone.js/dist/sync-test';
import 'zone.js/dist/jasmine-patch';
import 'zone.js/dist/async-test';
import 'zone.js/dist/fake-async-test';
import { getTestBed } from '@angular/core/testing';
import {

grep EXCEPTIONS:
================
// This file is required by karma.conf.js and loads recursively all the .spec and framework files
// Unfortunately there's no typing for the `__karma__` variable. Just declare it as any.
// Prevent Karma from running prematurely.
__karma__.loaded = function () {};
// First, initialize the Angular testing environment.
// Then we find all the tests.
// And load the modules.
// Finally, start Karma to run the tests.

File src/typings.d.ts
no filtering:
=============
      1 /* SystemJS module definition */
      2 :
      2 ;
      1 interface 
Total operators (unfiltered): 6

with filtering:
===============
      1 /* SystemJS module definition */
      2 :
      2 ;
      1 interface 
Total operators N1: 6

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============

grep EXCEPTIONS:
================

File: src/app/app.component.spec.ts
-----------------------------
no filtering:
=============
      2         const titleDiv = compiled.querySelector('div /deep/
      2  .
     24 (
      4 ).
     12 ,
      5 :
     29 ;
      1 <
      3 =
      6 =>
      2 >
      3 [
      1 class 
      3 d.
      4 e.
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { AppComponent } from './
      1 import { BlogItemComponent } from './modules/blog/blog-item/
      1 import { BlogListComponent } from './modules/blog/blog-list/
      1 import { ComponentFixture, TestBed, async } from '@angular/core/
      1 import { EditBlogEntryFormComponent } from './modules/blog/edit-blog-entry-form/
      1 import { FormsModule } from '@angular/
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from './modules/shared/
      1 import { Title } from '@angular/
      3 let
      2 m.
      1 p.
      1 t.
      2 try
Total operators (unfiltered): 120

with filtering:
===============
      2         const titleDiv = compiled.querySelector('div /deep/
      2  .
     24 (
      4 ).
     12 ,
      5 :
     29 ;
      1 <
      3 =
      6 =>
      2 >
      3 [
      1 class 
      3 d.
      4 e.
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { AppComponent } from './
      1 import { BlogItemComponent } from './modules/blog/blog-item/
      1 import { BlogListComponent } from './modules/blog/blog-list/
      1 import { ComponentFixture, TestBed, async } from '@angular/core/
      1 import { EditBlogEntryFormComponent } from './modules/blog/edit-blog-entry-form/
      1 import { FormsModule } from '@angular/
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from './modules/shared/
      1 import { Title } from '@angular/
      3 let
      2 m.
      1 p.
      1 t.
      2 try
Total operators N1: 120

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { ComponentFixture, TestBed, async } from '@angular/core/testing';
import { FormsModule } from '@angular/forms';
import { RouterTestingModule } from '@angular/router/testing';
import { ActivatedRoute, Router, NavigationEnd } from '@angular/router';
import { Title } from '@angular/platform-browser';
import { AppComponent } from './app.component';
import { BlogListComponent } from './modules/blog/blog-list/blog-list.component';
import { BlogItemComponent } from './modules/blog/blog-item/blog-item.component';
import { EditBlogEntryFormComponent } from './modules/blog/edit-blog-entry-form/edit-blog-entry-form.component';
import { SharedModule } from './modules/shared/shared.module';
            imports: [

grep EXCEPTIONS:
================

File: src/app/app.component.ts
-----------------------------
no filtering:
=============
      1     styleUrls: [ './
      1     templateUrl: './
      2  .
     12 (
      4 ,
      4 :
     15 ;
      6 =
      2 =>
      2 [
      1 class 
      2 const
      3 default
      7 e.
      1 if 
      1 implements 
      1 import 'rxjs/add/operator/
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { Component, OnInit, Inject } from '@angular/
      1 import { Title } from '@angular/
      1 instanceof
      2 let
      2 p.
      4 private
      1 r.
      4 t.
      9 this
      1 while 
      1 ||
Total operators (unfiltered): 93

with filtering:
===============
      1     styleUrls: [ './
      1     templateUrl: './
      2  .
     12 (
      4 ,
      4 :
     15 ;
      6 =
      2 =>
      2 [
      1 class 
      2 const
      3 default
      7 e.
      1 if 
      1 implements 
      1 import 'rxjs/add/operator/
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { Component, OnInit, Inject } from '@angular/
      1 import { Title } from '@angular/
      1 instanceof
      2 let
      2 p.
      4 private
      1 r.
      4 t.
      9 this
      1 while 
      1 ||
Total operators N1: 93

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { Component, OnInit, Inject } from '@angular/core';
import { Title } from '@angular/platform-browser';
import { ActivatedRoute, Router, NavigationEnd } from '@angular/router';
import 'rxjs/add/operator/filter';

grep EXCEPTIONS:
================

File: src/app/app.module.ts
-----------------------------
no filtering:
=============
      1         SharedModule.forRoot() //
      1     providers: [ //
      1 (
     13 ,
      5 :
     10 ;
      3 [
      1 class 
      1 d.
      1 e.
      1 g.
      1 i.
      1 import * as tokens from './
      1 import { AppComponent } from './
      1 import { BlogService } from './modules/blog/
      1 import { BrowserAnimationsModule } from '@angular/platform-browser/
      1 import { BrowserModule, Title } from '@angular/
      1 import { LoginService } from './modules/auth/login/
      1 import { NgModule } from '@angular/
      1 import { SharedModule } from './modules/shared/
      1 import { UserService } from './modules/auth/user/
      1 import { appRouting, routingComponents, routingProviders } from './
      2 let
      1 n.
      3 p.
      1 r.
      1 s.
      1 true
Total operators (unfiltered): 58

with filtering:
===============
      1         SharedModule.forRoot() //
      1     providers: [ //
      1 (
     13 ,
      5 :
     10 ;
      3 [
      1 class 
      1 d.
      1 e.
      1 g.
      1 i.
      1 import * as tokens from './
      1 import { AppComponent } from './
      1 import { BlogService } from './modules/blog/
      1 import { BrowserAnimationsModule } from '@angular/platform-browser/
      1 import { BrowserModule, Title } from '@angular/
      1 import { LoginService } from './modules/auth/login/
      1 import { NgModule } from '@angular/
      1 import { SharedModule } from './modules/shared/
      1 import { UserService } from './modules/auth/user/
      1 import { appRouting, routingComponents, routingProviders } from './
      2 let
      1 n.
      3 p.
      1 r.
      1 s.
      1 true
Total operators N1: 58

exceptions filter:
==================
      4 //

grep COMMENTS:
==============
// The app
// Shared module
// Services
// Routing

grep FUNCS:
===========

grep SPECIALS:
==============
import { BrowserModule, Title } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import * as tokens from './app.tokens';
import { AppComponent } from './app.component';
import { SharedModule } from './modules/shared/shared.module';
import { UserService } from './modules/auth/user/user.service';
import { LoginService } from './modules/auth/login/login.service';
import { BlogService } from './modules/blog/blog.service';
import { appRouting, routingComponents, routingProviders } from './app.routing';
    imports: [

grep EXCEPTIONS:
================
// The app
// Shared module
// Services
// Routing

File: src/app/app.routing.ts
-----------------------------
no filtering:
=============
      2     //
      1     // { path : '**', redirectTo: '/
      1     { path: '', redirectTo: '/
      1     { path: 'admin', canLoad: [ LoginGuard ], loadChildren: 'app/modules/admin/
      1     { path: 'blog', loadChildren: 'app/modules/blog/
      1     { path: 'home', redirectTo: '/
      1     { path: 'login', loadChildren: 'app/modules/auth/
      1 !
      3 (
      8 ,
      6 :
      9 ;
      4 =
      3 [
      4 const
      1 e.
      2 g.
      2 h.
      1 import { AppComponent } from './
      1 import { AuthModule } from './modules/auth/
      1 import { BlogModule } from './modules/blog/
      1 import { LoginGuard } from './modules/auth/login/
      1 import { Routes, RouterModule, PreloadAllModules } from '@angular/
      2 n.
      1 p.
Total operators (unfiltered): 59

with filtering:
===============
      1     { path: '', redirectTo: '/
      1     { path: 'admin', canLoad: [ LoginGuard ], loadChildren: 'app/modules/admin/
      1     { path: 'blog', loadChildren: 'app/modules/blog/
      1     { path: 'home', redirectTo: '/
      1     { path: 'login', loadChildren: 'app/modules/auth/
      1 !
      1 (
      8 ,
      6 :
      9 ;
      4 =
      3 [
      4 const
      1 e.
      2 g.
      2 h.
      1 import { AppComponent } from './
      1 import { AuthModule } from './modules/auth/
      1 import { BlogModule } from './modules/blog/
      1 import { LoginGuard } from './modules/auth/login/
      1 import { Routes, RouterModule, PreloadAllModules } from '@angular/
      2 n.
      1 p.
Total operators N1: 54

exceptions filter:
==================
      3     //

grep COMMENTS:
==============
    // We lazy-load the modules with a preloading strategy (loads in background)
    // on top-level it must be `canLoad` instead of `canActivate` (which is still used at deeper levels)
    // { path : '**', redirectTo: '/blog' }

grep FUNCS:
===========

grep SPECIALS:
==============
import { Routes, RouterModule, PreloadAllModules } from '@angular/router';
import { AppComponent } from './app.component';
import { BlogModule } from './modules/blog/blog.module';
import { AuthModule } from './modules/auth/auth.module';
import { LoginGuard } from './modules/auth/login/login.guard';

grep EXCEPTIONS:
================
    // We lazy-load the modules with a preloading strategy (loads in background)
    // on top-level it must be `canLoad` instead of `canActivate` (which is still used at deeper levels)
    // { path : '**', redirectTo: '/blog' }

File: src/app/app.tokens.ts
-----------------------------
no filtering:
=============
      1 (
      2 ;
      1 =
      1 const
      1 import { OpaqueToken } from '@angular/
Total operators (unfiltered): 6

with filtering:
===============
      1 (
      2 ;
      1 =
      1 const
      1 import { OpaqueToken } from '@angular/
Total operators N1: 6

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { OpaqueToken } from '@angular/core';

grep EXCEPTIONS:
================

File: src/app/modules/admin/admin-page/admin-page.component.spec.ts
-----------------------------
no filtering:
=============
      1  .
     16 (
      1 ).
      3 ,
      4 :
     15 ;
      1 <
      2 =
      4 =>
      1 >
      3 [
      2 d.
      4 e.
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { AdminPageComponent } from './
      1 import { RouterTestingModule } from '@angular/router/
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      2 let
Total operators (unfiltered): 63

with filtering:
===============
      1  .
     16 (
      1 ).
      3 ,
      4 :
     15 ;
      1 <
      2 =
      4 =>
      1 >
      3 [
      2 d.
      4 e.
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { AdminPageComponent } from './
      1 import { RouterTestingModule } from '@angular/router/
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      2 let
Total operators N1: 63

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { async, ComponentFixture, TestBed } from '@angular/core/testing';
import { RouterTestingModule } from '@angular/router/testing';
import { ActivatedRoute, Router, NavigationEnd } from '@angular/router';
import { AdminPageComponent } from './admin-page.component';
            imports: [

grep EXCEPTIONS:
================

File: src/app/modules/admin/admin-page/admin-page.component.ts
-----------------------------
no filtering:
=============
      1     templateUrl: './
      3 (
      1 ,
      3 :
      4 ;
      1 class 
      1 const
      1 e.
      1 implements 
      1 import { ActivatedRoute } from '@angular/
      1 import { Component, OnInit } from '@angular/
      1 import { NgForm } from '@angular/
      2 private
      1 t.
Total operators (unfiltered): 22

with filtering:
===============
      1     templateUrl: './
      3 (
      1 ,
      3 :
      4 ;
      1 class 
      1 const
      1 e.
      1 implements 
      1 import { ActivatedRoute } from '@angular/
      1 import { Component, OnInit } from '@angular/
      1 import { NgForm } from '@angular/
      2 private
      1 t.
Total operators N1: 22

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { Component, OnInit } from '@angular/core';
import { NgForm } from '@angular/forms';
import { ActivatedRoute } from '@angular/router';

grep EXCEPTIONS:
================

File: src/app/modules/admin/admin.module.ts
-----------------------------
no filtering:
=============
      1  ...
      1 (
      3 ,
      2 :
      4 ;
      2 [
      1 class 
      1 d.
      1 e.
      1 import { AdminPageComponent } from './admin-page/
      1 import { NgModule } from '@angular/
      1 import { SharedModule } from '../shared/
      1 import { adminRouting, adminRoutingComponents } from './
      1 n.
Total operators (unfiltered): 21

with filtering:
===============
      1  ...
      1 (
      3 ,
      2 :
      4 ;
      2 [
      1 class 
      1 d.
      1 e.
      1 import { AdminPageComponent } from './admin-page/
      1 import { NgModule } from '@angular/
      1 import { SharedModule } from '../shared/
      1 import { adminRouting, adminRoutingComponents } from './
      1 n.
Total operators N1: 21

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { NgModule } from '@angular/core';
import { AdminPageComponent } from './admin-page/admin-page.component';
import { adminRouting, adminRoutingComponents } from './admin.routing';
import { SharedModule } from '../shared/shared.module';
    imports: [

grep EXCEPTIONS:
================

File: src/app/modules/admin/admin.routing.ts
-----------------------------
no filtering:
=============
      1     //
      1 (
      2 ,
      5 :
      6 ;
      4 =
      3 [
      4 const
      2 e.
      1 import { AdminPageComponent } from './admin-page/
      1 import { Routes, RouterModule } from '@angular/
      1 let
Total operators (unfiltered): 31

with filtering:
===============
      1 (
      2 ,
      5 :
      6 ;
      4 =
      3 [
      4 const
      2 e.
      1 import { AdminPageComponent } from './admin-page/
      1 import { Routes, RouterModule } from '@angular/
Total operators N1: 29

exceptions filter:
==================
      1     //

grep COMMENTS:
==============
    // path '' is the component holding the outlet

grep FUNCS:
===========

grep SPECIALS:
==============
import { Routes, RouterModule } from '@angular/router';
import { AdminPageComponent } from './admin-page/admin-page.component';

grep EXCEPTIONS:
================
    // path '' is the component holding the outlet

File: src/app/modules/auth/auth-component/auth.component.spec.ts
-----------------------------
no filtering:
=============
      1  .
     16 (
      1 ).
      3 ,
      4 :
     14 ;
      1 <
      2 =
      4 =>
      1 >
      3 [
      2 d.
      3 e.
      1 h.
      1 import { AuthComponent } from './
      1 import { RouterTestingModule } from '@angular/router/
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      2 let
Total operators (unfiltered): 61

with filtering:
===============
      1  .
     16 (
      1 ).
      3 ,
      4 :
     14 ;
      1 <
      2 =
      4 =>
      1 >
      3 [
      2 d.
      3 e.
      1 h.
      1 import { AuthComponent } from './
      1 import { RouterTestingModule } from '@angular/router/
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      2 let
Total operators N1: 61

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { async, ComponentFixture, TestBed } from '@angular/core/testing';
import { RouterTestingModule } from '@angular/router/testing';
import { AuthComponent } from './auth.component';
            imports: [

grep EXCEPTIONS:
================

File: src/app/modules/auth/auth-component/auth.component.ts
-----------------------------
no filtering:
=============
      1     template: '<router-outlet></
      1 (
      1 ,
      1 :
      1 ;
      1 >
      1 class 
      1 import { Component } from '@angular/
      1 let
Total operators (unfiltered): 9

with filtering:
===============
      1     template: '<router-outlet></
      1 (
      1 ,
      1 :
      1 ;
      1 >
      1 class 
      1 import { Component } from '@angular/
      1 let
Total operators N1: 9

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { Component } from '@angular/core';

grep EXCEPTIONS:
================

File: src/app/modules/auth/auth.module.ts
-----------------------------
no filtering:
=============
      1  ...
      1 (
      3 ,
      2 :
      5 ;
      2 [
      1 class 
      1 d.
      1 h.
      1 import { LoginFormComponent } from './login/login-form/
      1 import { NgModule } from '@angular/
      1 import { SharedModule } from '../shared/
      1 import { UserStore } from './user/
      1 import { authRouting, authRoutingComponents } from './
      1 m.
      1 r.
Total operators (unfiltered): 24

with filtering:
===============
      1  ...
      1 (
      3 ,
      2 :
      5 ;
      2 [
      1 class 
      1 d.
      1 h.
      1 import { LoginFormComponent } from './login/login-form/
      1 import { NgModule } from '@angular/
      1 import { SharedModule } from '../shared/
      1 import { UserStore } from './user/
      1 import { authRouting, authRoutingComponents } from './
      1 m.
      1 r.
Total operators N1: 24

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { NgModule } from '@angular/core';
import { LoginFormComponent } from './login/login-form/login-form.component';
import { UserStore } from './user/user.store';
import { authRouting, authRoutingComponents } from './auth.routing';
import { SharedModule } from '../shared/shared.module';
    imports: [

grep EXCEPTIONS:
================

File: src/app/modules/auth/auth.routing.ts
-----------------------------
no filtering:
=============
      1     //
      1 (
      5 ,
      8 :
      7 ;
      4 =
      4 [
      4 const
      2 e.
      1 h.
      1 import { AuthComponent } from './auth-component/
      1 import { LoginPageComponent } from './login/login-page/
      1 import { Routes, RouterModule } from '@angular/
      1 let
Total operators (unfiltered): 41

with filtering:
===============
      1 (
      5 ,
      8 :
      7 ;
      4 =
      4 [
      4 const
      2 e.
      1 h.
      1 import { AuthComponent } from './auth-component/
      1 import { LoginPageComponent } from './login/login-page/
      1 import { Routes, RouterModule } from '@angular/
Total operators N1: 39

exceptions filter:
==================
      1     //

grep COMMENTS:
==============
    // path '' is the component holding the outlet

grep FUNCS:
===========

grep SPECIALS:
==============
import { Routes, RouterModule } from '@angular/router';
import { AuthComponent } from './auth-component/auth.component';
import { LoginPageComponent } from './login/login-page/login-page.component';

grep EXCEPTIONS:
================
    // path '' is the component holding the outlet

File: src/app/modules/auth/login/login-form/login-form.component.spec.ts
-----------------------------
no filtering:
=============
      2  .
     16 (
      1 ).
     11 ,
     11 :
     19 ;
      1 <
      2 =
      4 =>
      1 >
      4 [
      2 d.
      4 e.
      1 import { LoginFormComponent } from './
      1 import { LoginService } from '../
      1 import { MockUserService } from '../../user/
      1 import { NavigationService } from '../../../shared/
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from '../../../shared/
      1 import { UserService } from '../../user/
      1 import { async, ComponentFixture, inject, TestBed } from '@angular/core/
      2 let
      1 m.
      2 n.
      2 r.
Total operators (unfiltered): 93

with filtering:
===============
      2  .
     16 (
      1 ).
     11 ,
     11 :
     19 ;
      1 <
      2 =
      4 =>
      1 >
      4 [
      2 d.
      4 e.
      1 import { LoginFormComponent } from './
      1 import { LoginService } from '../
      1 import { MockUserService } from '../../user/
      1 import { NavigationService } from '../../../shared/
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from '../../../shared/
      1 import { UserService } from '../../user/
      1 import { async, ComponentFixture, inject, TestBed } from '@angular/core/
      2 let
      1 m.
      2 n.
      2 r.
Total operators N1: 93

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { async, ComponentFixture, inject, TestBed } from '@angular/core/testing';
import { RouterTestingModule } from '@angular/router/testing';
import { SharedModule } from '../../../shared/shared.module';
import { LoginFormComponent } from './login-form.component';
import { UserService } from '../../user/user.service';
import { MockUserService } from '../../user/user.service.mock';
import { LoginService } from '../login.service';
import { NavigationService } from '../../../shared/navigation.service';
                imports: [

grep EXCEPTIONS:
================

File: src/app/modules/auth/login/login-form/login-form.component.ts
-----------------------------
no filtering:
=============
      1     @ViewChild(NgForm) form: NgForm; //
      1     styleUrls: [ './
      1     templateUrl: './
     12 (
     13 ,
     10 :
     15 ;
      3 =
      1 class 
      4 const
      1 d.
      8 e.
      1 else
      1 for 
      1 if 
      1 import { ActivatedRoute, Router } from '@angular/
      1 import { Component, EventEmitter, ViewChild } from '@angular/
      1 import { LoginService } from '../
      1 import { MdSnackBar } from '@angular/
      1 import { NavigationService } from '../../../shared/
      1 import { NgForm } from '@angular/
      4 m.
      2 n.
      5 private
      2 r.
      4 t.
      9 this
      1 y.
      1 }.
Total operators (unfiltered): 107

with filtering:
===============
      1     @ViewChild(NgForm) form: NgForm; //
      1     styleUrls: [ './
      1     templateUrl: './
     10 (
     13 ,
      8 :
     15 ;
      3 =
      1 class 
      4 const
      1 d.
      8 e.
      1 else
      1 for 
      1 if 
      1 import { ActivatedRoute, Router } from '@angular/
      1 import { Component, EventEmitter, ViewChild } from '@angular/
      1 import { LoginService } from '../
      1 import { MdSnackBar } from '@angular/
      1 import { NavigationService } from '../../../shared/
      1 import { NgForm } from '@angular/
      4 m.
      2 n.
      5 private
      2 r.
      4 t.
      9 this
      1 y.
      1 }.
Total operators N1: 103

exceptions filter:
==================
      1 ancel(cancel: boolean) {
      1 ubmit(formValue: any) {

grep COMMENTS:
==============

grep FUNCS:
===========
    onSubmit(formValue: any) {
    onCancel(cancel: boolean) {

grep SPECIALS:
==============
import { Component, EventEmitter, ViewChild } from '@angular/core';
import { NgForm } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { LoginService } from '../login.service';
import { NavigationService } from '../../../shared/navigation.service';
import { MdSnackBar } from '@angular/material';

grep EXCEPTIONS:
================
    onSubmit(formValue: any) {
    onCancel(cancel: boolean) {

File: src/app/modules/auth/login/login-page/login-page.component.spec.ts
-----------------------------
no filtering:
=============
      1  .
     16 (
      1 ).
     12 ,
     11 :
     20 ;
      1 <
      2 =
      4 =>
      1 >
      4 [
      3 d.
      5 e.
      1 import { LoginFormComponent } from '../login-form/
      1 import { LoginPageComponent } from './
      1 import { LoginService } from '../
      1 import { MockUserService } from '../../user/
      1 import { NavigationService } from '../../../shared/
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from '../../../shared/
      1 import { UserService } from '../../user/
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      2 let
      1 m.
      2 n.
      2 r.
Total operators (unfiltered): 97

with filtering:
===============
      1  .
     16 (
      1 ).
     12 ,
     11 :
     20 ;
      1 <
      2 =
      4 =>
      1 >
      4 [
      3 d.
      5 e.
      1 import { LoginFormComponent } from '../login-form/
      1 import { LoginPageComponent } from './
      1 import { LoginService } from '../
      1 import { MockUserService } from '../../user/
      1 import { NavigationService } from '../../../shared/
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from '../../../shared/
      1 import { UserService } from '../../user/
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      2 let
      1 m.
      2 n.
      2 r.
Total operators N1: 97

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { async, ComponentFixture, TestBed } from '@angular/core/testing';
import { RouterTestingModule } from '@angular/router/testing';
import { SharedModule } from '../../../shared/shared.module';
import { LoginPageComponent } from './login-page.component';
import { LoginFormComponent } from '../login-form/login-form.component';
import { LoginService } from '../login.service';
import { UserService } from '../../user/user.service';
import { MockUserService } from '../../user/user.service.mock';
import { NavigationService } from '../../../shared/navigation.service';
            imports: [

grep EXCEPTIONS:
================

File: src/app/modules/auth/login/login-page/login-page.component.ts
-----------------------------
no filtering:
=============
      1             //
      1     templateUrl: './
      2 !
      1 !=
     12 (
      4 ,
      5 :
     18 ;
      8 =
      1 =>
      1 [
      3 a.
      1 class 
      1 const
      7 e.
      1 else
      2 false
      4 if 
      1 implements 
      1 import debug from '../../../../../
      1 import { ActivatedRoute } from '@angular/
      1 import { Component, OnInit } from '@angular/
      1 import { LoginService } from '../
      1 import { NgForm } from '@angular/
      1 import { User } from '../../user/
      1 n.
      3 private
      1 r.
      2 t.
     10 this
      2 true
Total operators (unfiltered): 99

with filtering:
===============
      1     templateUrl: './
      1 !
      1 !=
     10 (
      4 ,
      5 :
     18 ;
      8 =
      1 =>
      1 [
      3 a.
      1 class 
      1 const
      6 e.
      1 else
      2 false
      3 if 
      1 implements 
      1 import debug from '../../../../../
      1 import { ActivatedRoute } from '@angular/
      1 import { Component, OnInit } from '@angular/
      1 import { LoginService } from '../
      1 import { NgForm } from '@angular/
      1 import { User } from '../../user/
      1 n.
      3 private
      1 r.
      2 t.
      9 this
      2 true
Total operators N1: 92

exceptions filter:
==================
      1             //
      1 n()) {

grep COMMENTS:
==============
            // A user is already logged in

grep FUNCS:
===========
        if (!this.loginService.isLoggedIn()) {

grep SPECIALS:
==============
import { Component, OnInit } from '@angular/core';
import { NgForm } from '@angular/forms';
import { ActivatedRoute } from '@angular/router';
import { LoginService } from '../login.service';
import { User } from '../../user/model-interfaces';
import debug from '../../../../../debug';

grep EXCEPTIONS:
================
        if (!this.loginService.isLoggedIn()) {
            // A user is already logged in

File: src/app/modules/auth/login/login.guard.ts
-----------------------------
no filtering:
=============
      1             this.router.navigate([ '/
      1      RouterStateSnapshot, Route, Router } from '@angular/
      1 !
     11 (
      7 ,
     10 :
     11 ;
      2 <
      2 =
      2 >
      1 class 
      3 const
      2 e.
      1 false
      1 if 
      1 implements 
      1 import 
      1 import { Injectable } from '@angular/
      1 import { LoginService } from './
      1 import { Observable } from 'rxjs/
      1 n.
      3 private
      4 return
      1 t.
      3 this
      1 true
      2 |
Total operators (unfiltered): 76

with filtering:
===============
      1             this.router.navigate([ '/
      1      RouterStateSnapshot, Route, Router } from '@angular/
      8 (
      7 ,
      9 :
     11 ;
      2 <
      2 =
      2 >
      1 class 
      3 const
      1 e.
      1 false
      1 implements 
      1 import 
      1 import { Injectable } from '@angular/
      1 import { LoginService } from './
      1 import { Observable } from 'rxjs/
      1 n.
      2 private
      4 return
      1 t.
      2 this
      1 true
      2 |
Total operators N1: 67

exceptions filter:
==================
      1 n()) {
      1 ogin(redirect: string) {

grep COMMENTS:
==============

grep FUNCS:
===========
    private checkLogin(redirect: string) {
        if (!this.loginService.isLoggedIn()) {

grep SPECIALS:
==============
import { Injectable } from '@angular/core';
import { CanActivate, CanLoad, ActivatedRouteSnapshot,
import { Observable } from 'rxjs/Observable';
import { LoginService } from './login.service';

grep EXCEPTIONS:
================
    private checkLogin(redirect: string) {
        if (!this.loginService.isLoggedIn()) {

File: src/app/modules/auth/login/login.service.mock.ts
-----------------------------
no filtering:
=============
      1                 result = true; //
      1     //
      1 !
     23 (
      4 ).
      3 ,
     13 :
     24 ;
      3 <
      9 =
      1 ==
      3 =>
      3 >
      1 ?
      1 class 
      1 const
      1 do
      4 e.
      1 else
      5 false
      1 if 
      1 import 
      1 import { BehaviorSubject } from 'rxjs/
      1 import { Injectable } from '@angular/
      1 import { Observable } from 'rxjs/
      1 import { User } from '../user/
      1 import { UserService } from '../user/
      1 let
      3 private
      1 public
      7 r.
      4 return
     12 this
      1 true
Total operators (unfiltered): 139

with filtering:
===============
      1                 result = true; //
      1 !
     22 (
      4 ).
      3 ,
     11 :
     24 ;
      3 <
      9 =
      1 ==
      3 =>
      3 >
      1 ?
      1 class 
      1 do
      4 e.
      1 else
      5 false
      1 if 
      1 import 
      1 import { BehaviorSubject } from 'rxjs/
      1 import { Injectable } from '@angular/
      1 import { Observable } from 'rxjs/
      1 import { User } from '../user/
      1 import { UserService } from '../user/
      1 let
      2 private
      1 public
      7 r.
      4 return
     11 this
      1 true
Total operators N1: 132

exceptions filter:
==================
      1     //
      1 constructor(private userService: UserService) {

grep COMMENTS:
==============
    // TODO: rewrite this to work with subscribing

grep FUNCS:
===========
    constructor(private userService: UserService) { }

grep SPECIALS:
==============
import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import { Observable } from 'rxjs/Observable';
import { User } from '../user/model-interfaces';
import { UserService } from '../user/user.service';
import md5 from 'md5';

grep EXCEPTIONS:
================
    constructor(private userService: UserService) { }
    // TODO: rewrite this to work with subscribing

File: src/app/modules/auth/login/login.service.spec.ts
-----------------------------
no filtering:
=============
     10 (
      1 ).
      6 ,
      4 :
      9 ;
      3 =>
      2 [
      1 d.
      1 e.
      1 import { LoginService } from './
      1 import { MockUserService } from '../user/
      1 import { TestBed, inject } from '@angular/core/
      1 import { UserService } from '../user/
      1 n.
      2 r.
Total operators (unfiltered): 44

with filtering:
===============
     10 (
      1 ).
      6 ,
      4 :
      9 ;
      3 =>
      2 [
      1 d.
      1 e.
      1 import { LoginService } from './
      1 import { MockUserService } from '../user/
      1 import { TestBed, inject } from '@angular/core/
      1 import { UserService } from '../user/
      1 n.
      2 r.
Total operators N1: 44

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { TestBed, inject } from '@angular/core/testing';
import { LoginService } from './login.service';
import { UserService } from '../user/user.service';
import { MockUserService } from '../user/user.service.mock';

grep EXCEPTIONS:
================

File: src/app/modules/auth/login/login.service.ts
-----------------------------
no filtering:
=============
      1                 result = true; //
      1     //
      1 !
     25 (
      4 ).
      3 ,
     13 :
     25 ;
      3 <
      9 =
      1 ==
      3 =>
      3 >
      1 ?
      1 class 
      1 const
      1 do
      4 e.
      1 else
      5 false
      3 if 
      1 import 
      1 import debug from '../../../../
      1 import { BehaviorSubject } from 'rxjs/
      1 import { Injectable } from '@angular/
      1 import { Observable } from 'rxjs/
      1 import { User } from '../user/
      1 import { UserService } from '../user/
      1 let
      3 private
      1 public
      7 r.
      4 return
     12 this
      1 true
Total operators (unfiltered): 145

with filtering:
===============
      1                 result = true; //
      1 !
     24 (
      4 ).
      3 ,
     11 :
     25 ;
      3 <
      9 =
      1 ==
      3 =>
      3 >
      1 ?
      1 class 
      1 do
      4 e.
      1 else
      5 false
      3 if 
      1 import 
      1 import debug from '../../../../
      1 import { BehaviorSubject } from 'rxjs/
      1 import { Injectable } from '@angular/
      1 import { Observable } from 'rxjs/
      1 import { User } from '../user/
      1 import { UserService } from '../user/
      1 let
      2 private
      1 public
      7 r.
      4 return
     11 this
      1 true
Total operators N1: 138

exceptions filter:
==================
      1     //
      1 constructor(private userService: UserService) {

grep COMMENTS:
==============
    // TODO: rewrite this to work with subscribing

grep FUNCS:
===========
    constructor(private userService: UserService) { }

grep SPECIALS:
==============
import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import { Observable } from 'rxjs/Observable';
import { User } from '../user/model-interfaces';
import { UserService } from '../user/user.service';
import md5 from 'md5';
import debug from '../../../../debug';

grep EXCEPTIONS:
================
    constructor(private userService: UserService) { }
    // TODO: rewrite this to work with subscribing

File: src/app/modules/auth/user/initialUsers.ts
-----------------------------
no filtering:
=============
      8 ,
      8 :
      2 ;
      1 =
      1 [
      1 const
      2 e.
      1 import { User } from './
      1 n.
      1 t.
Total operators (unfiltered): 26

with filtering:
===============
      8 ,
      8 :
      2 ;
      1 =
      1 [
      1 const
      2 e.
      1 import { User } from './
      1 n.
      1 t.
Total operators N1: 26

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { User } from './model-interfaces';

grep EXCEPTIONS:
================

File: src/app/modules/auth/user/model-interfaces.ts
-----------------------------
no filtering:
=============
      4 :
      4 ;
      4 ?
      1 interface 
Total operators (unfiltered): 13

with filtering:
===============
      4 :
      4 ;
      4 ?
      1 interface 
Total operators N1: 13

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============

grep EXCEPTIONS:
================

File: src/app/modules/auth/user/user.service.mock.ts
-----------------------------
no filtering:
=============
      1     //
      1  -
      2  .
      3 $.
     13 (
      9 :
     10 ;
      7 <
      3 =
      2 ==
      5 =>
      7 >
      2 [
      1 class 
      1 const
      1 e.
      1 import { BehaviorSubject } from 'rxjs/
      1 import { Injectable } from '@angular/
      1 import { Observable } from 'rxjs/
      1 import { User } from './
      1 import { initialUsers } from './
      6 public
      2 r.
      3 return
      1 t.
      3 this
      1 |
Total operators (unfiltered): 89

with filtering:
===============
      1  -
      2  .
      3 $.
     13 (
      8 :
     10 ;
      7 <
      3 =
      2 ==
      5 =>
      7 >
      2 [
      1 class 
      1 const
      1 e.
      1 import { BehaviorSubject } from 'rxjs/
      1 import { Injectable } from '@angular/
      1 import { Observable } from 'rxjs/
      1 import { User } from './
      1 import { initialUsers } from './
      5 public
      2 r.
      3 return
      1 t.
      3 this
      1 |
Total operators N1: 86

exceptions filter:
==================
      1     //

grep COMMENTS:
==============
    // This is the public API:

grep FUNCS:
===========

grep SPECIALS:
==============
import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import { Observable } from 'rxjs/Observable';
import { User } from './model-interfaces';
import { initialUsers } from './initialUsers';

grep EXCEPTIONS:
================
    // This is the public API:

File: src/app/modules/auth/user/user.service.spec.ts
-----------------------------
no filtering:
=============
     10 (
      1 ).
      4 ,
      2 :
      8 ;
      3 =>
      2 [
      1 d.
      1 import { TestBed, inject } from '@angular/core/
      1 import { UserService } from './
      1 import { UserStore } from './
      2 r.
Total operators (unfiltered): 36

with filtering:
===============
     10 (
      1 ).
      4 ,
      2 :
      8 ;
      3 =>
      2 [
      1 d.
      1 import { TestBed, inject } from '@angular/core/
      1 import { UserService } from './
      1 import { UserStore } from './
      2 r.
Total operators N1: 36

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { TestBed, inject } from '@angular/core/testing';
import { UserService } from './user.service';
import { UserStore } from './user.store';

grep EXCEPTIONS:
================

File: src/app/modules/auth/user/user.service.ts
-----------------------------
no filtering:
=============
      1         const users = initialUsers; //
      1         this.findUsers(); //
      1         this.users$ = userStore.users$; //
      2     //
      1  -
      2  .
      4 $.
     22 (
      4 ,
     23 :
     18 ;
      6 <
      3 =
      2 ==
      5 =>
      6 >
      1 ?
      1 [
      1 class 
      2 const
      5 e.
      1 if 
      1 import debug from '../../../../
      1 import { BehaviorSubject } from 'rxjs/
      1 import { Injectable } from '@angular/
      1 import { LOAD, ADD, EDIT, REMOVE, UserStore } from './
      1 import { Observable } from 'rxjs/
      1 import { User } from './
      1 import { initialUsers } from './
      1 let
      2 private
      8 public
      4 r.
      5 return
      1 t.
      9 this
      1 |
Total operators (unfiltered): 150

with filtering:
===============
      1         const users = initialUsers; //
      1         this.findUsers(); //
      1         this.users$ = userStore.users$; //
      1  -
      2  .
      4 $.
     21 (
      3 ,
     20 :
     18 ;
      6 <
      3 =
      2 ==
      5 =>
      6 >
      1 ?
      1 [
      1 class 
      1 const
      5 e.
      1 if 
      1 import debug from '../../../../
      1 import { BehaviorSubject } from 'rxjs/
      1 import { Injectable } from '@angular/
      1 import { LOAD, ADD, EDIT, REMOVE, UserStore } from './
      1 import { Observable } from 'rxjs/
      1 import { User } from './
      1 import { initialUsers } from './
      1 let
      1 private
      7 public
      4 r.
      4 return
      1 t.
      8 this
      1 |
Total operators N1: 138

exceptions filter:
==================
      2     //
      1 constructor(private userStore: UserStore) {

grep COMMENTS:
==============
    // This is the public API:
    // TODO: use search params to filter data, at the moment this just return all data

grep FUNCS:
===========
    constructor(private userStore: UserStore) {

grep SPECIALS:
==============
import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import { Observable } from 'rxjs/Observable';
import { User } from './model-interfaces';
import { initialUsers } from './initialUsers';
import { LOAD, ADD, EDIT, REMOVE, UserStore } from './user.store';
import debug from '../../../../debug';

grep EXCEPTIONS:
================
    constructor(private userStore: UserStore) {
    // This is the public API:
    // TODO: use search params to filter data, at the moment this just return all data

File: src/app/modules/auth/user/user.store.ts
-----------------------------
no filtering:
=============
      1         this.users = this.reduce(this.users, action); //
      1         this.users$.next(this.users); //
      2  .
      5  ...
      2 !=
     28 (
      1 *
     12 +
      8 ,
     12 :
     22 ;
      6 <
     10 =
      4 =>
      6 >
      4 [
      4 case
      1 class 
      6 const
      1 default
      1 do
      4 e.
      2 h.
      3 if 
      1 import debug from '../../../../
      1 import { BehaviorSubject } from 'rxjs/
      1 import { User } from './
      8 n.
      1 private
      1 public
     10 return
      2 s.
      1 static
      1 switch 
      8 try
Total operators (unfiltered): 181

with filtering:
===============
      1         this.users = this.reduce(this.users, action); //
      1         this.users$.next(this.users); //
      2  .
      5  ...
      2 !=
     26 (
      1 *
     12 +
      7 ,
     11 :
     22 ;
      5 <
     10 =
      4 =>
      5 >
      4 [
      4 case
      1 class 
      6 const
      1 default
      1 do
      4 e.
      2 h.
      3 if 
      1 import debug from '../../../../
      1 import { BehaviorSubject } from 'rxjs/
      1 import { User } from './
      8 n.
      1 private
      1 public
     10 return
      2 s.
      1 static
      1 switch 
      8 try
Total operators N1: 175

exceptions filter:
==================
      1 dispatch(action) {
      1 reduce(users: Array<User>, action) {

grep COMMENTS:
==============

grep FUNCS:
===========
    dispatch(action) {
    reduce(users: Array<User>, action) {

grep SPECIALS:
==============
import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import { User } from './model-interfaces';
import debug from '../../../../debug';

grep EXCEPTIONS:
================
    dispatch(action) {
    reduce(users: Array<User>, action) {

File: src/app/modules/blog/blog-item/blog-item.component.spec.ts
-----------------------------
no filtering:
=============
      1  .
     16 (
      1 ).
      8 ,
      7 :
     17 ;
      1 <
      2 =
      4 =>
      1 >
      4 [
      3 d.
      4 e.
      2 g.
      1 import { BlogItemComponent } from './
      1 import { BlogService } from '../
      1 import { MockBlogService } from '../
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from '../../shared/
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      2 let
      1 m.
Total operators (unfiltered): 80

with filtering:
===============
      1  .
     16 (
      1 ).
      8 ,
      7 :
     17 ;
      1 <
      2 =
      4 =>
      1 >
      4 [
      3 d.
      4 e.
      2 g.
      1 import { BlogItemComponent } from './
      1 import { BlogService } from '../
      1 import { MockBlogService } from '../
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from '../../shared/
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      2 let
      1 m.
Total operators N1: 80

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { async, ComponentFixture, TestBed } from '@angular/core/testing';
import { RouterTestingModule } from '@angular/router/testing';
import { SharedModule } from '../../shared/shared.module';
import { BlogItemComponent } from './blog-item.component';
import { MockBlogService } from '../blog.service.mock';
import { BlogService } from '../blog.service';
            imports: [

grep EXCEPTIONS:
================

File: src/app/modules/blog/blog-item/blog-item.component.ts
-----------------------------
no filtering:
=============
      1                      : this.item; //
      1                      ? this.item = this.blogService.getEntry(id) //
      1                 this.item = ('undefined' === typeof this.item) //
      3         //
      1         // this.router.navigate([ '/
      1         // this.router.navigateByUrl(`/blog/edit/(blogeditoutlet:edit/
      1         // this.router.navigateByUrl(`blog/edit/
      1         // this.router.navigateByUrl(`blog/item/${id}/
      1         return 'assets/images/
      1         this.router.navigate([ './
      1     styleUrls: [ './
      1     templateUrl: './
      1  .
     15 (
      1 +
     10 ,
     13 :
     21 ;
      3 =
      1 =>
      2 [
      1 class 
      3 const
      4 e.
      1 g.
      2 if 
      1 implements 
      1 import debug from '../../../../
      1 import { ActivatedRoute, Router } from '@angular/
      1 import { BlogEntry } from '../
      1 import { BlogService } from '../
      1 import { Component, OnInit, OnDestroy, Input } from '@angular/
      1 import { Subscription } from 'rxjs/
      4 let
      3 m.
      1 n.
      4 private
      2 t.
      6 this
      3 try
      1 ||
Total operators (unfiltered): 123

with filtering:
===============
      1                      : this.item; //
      1                      ? this.item = this.blogService.getEntry(id) //
      1                 this.item = ('undefined' === typeof this.item) //
      1         return 'assets/images/
      1         this.router.navigate([ './
      1     styleUrls: [ './
      1     templateUrl: './
      1  .
     12 (
      1 +
      7 ,
      9 :
     16 ;
      3 =
      1 =>
      1 [
      1 class 
      3 const
      3 e.
      1 g.
      2 if 
      1 implements 
      1 import debug from '../../../../
      1 import { ActivatedRoute, Router } from '@angular/
      1 import { BlogEntry } from '../
      1 import { BlogService } from '../
      1 import { Component, OnInit, OnDestroy, Input } from '@angular/
      1 import { Subscription } from 'rxjs/
      1 let
      3 m.
      1 n.
      4 private
      2 t.
      5 this
      2 try
      1 ||
Total operators N1: 94

exceptions filter:
==================
      7         //
      1 dit(id: string) {
      1 elete(id: string) {

grep COMMENTS:
==============
        // this.router.navigate([ '/blog',
        //     { outlets: { 'blogeditoutlet':  [ 'blog', 'edit', id ] } } ]
        // );
        // this.router.navigateByUrl(`/blog/edit/(blogeditoutlet:edit/${id})`);
        // this.router.navigateByUrl(`blog/edit/${id}`);
        // this.blogService.startEditingEntry(id);
        // this.router.navigateByUrl(`blog/item/${id}/edit`);

grep FUNCS:
===========
    onEdit(id: string) {
    onDelete(id: string) {

grep SPECIALS:
==============
import { Component, OnInit, OnDestroy, Input } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { Subscription } from 'rxjs/Subscription';
import { BlogEntry } from '../model-interfaces';
import { BlogService } from '../blog.service';
import debug from '../../../../debug';

grep EXCEPTIONS:
================
    onEdit(id: string) {
        // this.router.navigate([ '/blog',
        //     { outlets: { 'blogeditoutlet':  [ 'blog', 'edit', id ] } } ]
        // );
        // this.router.navigateByUrl(`/blog/edit/(blogeditoutlet:edit/${id})`);
        // this.router.navigateByUrl(`blog/edit/${id}`);
        // this.blogService.startEditingEntry(id);
        // this.router.navigateByUrl(`blog/item/${id}/edit`);
    onDelete(id: string) {

File: src/app/modules/blog/blog-list/blog-list.component.spec.ts
-----------------------------
no filtering:
=============
     16 (
      2 ).
     10 ,
      7 :
     20 ;
      1 <
      2 =
      4 =>
      1 >
      4 [
      3 d.
      4 e.
      2 g.
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { BlogItemComponent } from '../blog-item/
      1 import { BlogListComponent } from './
      1 import { BlogService } from '../
      1 import { FormsModule } from '@angular/
      1 import { MockBlogService } from '../
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from '../../shared/
      1 import { async, inject, ComponentFixture, TestBed } from '@angular/core/
      2 let
      1 m.
      1 t.
Total operators (unfiltered): 89

with filtering:
===============
     16 (
      2 ).
     10 ,
      7 :
     20 ;
      1 <
      2 =
      4 =>
      1 >
      4 [
      3 d.
      4 e.
      2 g.
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { BlogItemComponent } from '../blog-item/
      1 import { BlogListComponent } from './
      1 import { BlogService } from '../
      1 import { FormsModule } from '@angular/
      1 import { MockBlogService } from '../
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from '../../shared/
      1 import { async, inject, ComponentFixture, TestBed } from '@angular/core/
      2 let
      1 m.
      1 t.
Total operators N1: 89

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { async, inject, ComponentFixture, TestBed } from '@angular/core/testing';
import { FormsModule } from '@angular/forms';
import { RouterTestingModule } from '@angular/router/testing';
import { ActivatedRoute, Router, NavigationEnd } from '@angular/router';
import { SharedModule } from '../../shared/shared.module';
import { BlogListComponent } from './blog-list.component';
import { BlogItemComponent } from '../blog-item/blog-item.component';
import { BlogService } from '../blog.service';
import { MockBlogService } from '../blog.service.mock';
            imports: [

grep EXCEPTIONS:
================

File: src/app/modules/blog/blog-list/blog-list.component.ts
-----------------------------
no filtering:
=============
      1     templateUrl: './
      3 (
      2 ,
      3 :
      6 ;
      2 <
      1 =
      2 >
      1 class 
      1 const
      1 e.
      1 g.
      1 implements 
      1 import { BlogEntry } from '../
      1 import { BlogService } from '../
      1 import { Component, OnInit, Input, Inject } from '@angular/
      1 import { Observable } from 'rxjs/
      1 private
      2 t.
      2 this
      1 try
Total operators (unfiltered): 35

with filtering:
===============
      1     templateUrl: './
      3 (
      2 ,
      3 :
      6 ;
      2 <
      1 =
      2 >
      1 class 
      1 const
      1 e.
      1 g.
      1 implements 
      1 import { BlogEntry } from '../
      1 import { BlogService } from '../
      1 import { Component, OnInit, Input, Inject } from '@angular/
      1 import { Observable } from 'rxjs/
      1 private
      2 t.
      2 this
      1 try
Total operators N1: 35

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { Component, OnInit, Input, Inject } from '@angular/core';
import { Observable } from 'rxjs/Observable';
import { BlogEntry } from '../model-interfaces';
import { BlogService } from '../blog.service';

grep EXCEPTIONS:
================

File: src/app/modules/blog/blog-page/blog-page.component.spec.ts
-----------------------------
no filtering:
=============
      1                 { provide: APP_BASE_HREF, useValue: '/
      1         const titleText = compiled.querySelector('div /deep/
      2  .
     22 (
      3 ).
     13 ,
     18 :
     25 ;
      1 <
      3 =
      5 =>
      2 >
      4 [
      3 d.
      7 e.
      2 g.
      1 import { APP_BASE_HREF } from '@angular/
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { BlogPageComponent } from './
      1 import { BlogService } from '../
      1 import { MockBlogService } from '../
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from '../../shared/
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      3 let
      1 t.
Total operators (unfiltered): 124

with filtering:
===============
      1                 { provide: APP_BASE_HREF, useValue: '/
      1         const titleText = compiled.querySelector('div /deep/
      2  .
     22 (
      3 ).
     13 ,
     18 :
     25 ;
      1 <
      3 =
      5 =>
      2 >
      4 [
      3 d.
      7 e.
      2 g.
      1 import { APP_BASE_HREF } from '@angular/
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { BlogPageComponent } from './
      1 import { BlogService } from '../
      1 import { MockBlogService } from '../
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from '../../shared/
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      3 let
      1 t.
Total operators N1: 124

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { async, ComponentFixture, TestBed } from '@angular/core/testing';
import { ActivatedRoute, Router, NavigationEnd } from '@angular/router';
import { RouterTestingModule } from '@angular/router/testing';
import { APP_BASE_HREF } from '@angular/common';
import { BlogPageComponent } from './blog-page.component';
import { SharedModule } from '../../shared/shared.module';
import { BlogService } from '../blog.service';
import { MockBlogService } from '../blog.service.mock';
            imports: [

grep EXCEPTIONS:
================

File: src/app/modules/blog/blog-page/blog-page.component.ts
-----------------------------
no filtering:
=============
      1                 if (event['url'].split('/
      1     //
      1     styleUrls: [ './
      1     templateUrl: './
      2  .
     13 (
      2 ).
      7 ,
     10 :
     19 ;
      7 =
      1 ==
      3 =>
      1 [
      1 class 
      1 const
      7 e.
      1 else
      3 false
      1 g.
      2 if 
      1 implements 
      1 import debug from '../../../../
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { BlogEntry } from '../
      1 import { BlogService } from '../
      1 import { Component, OnInit } from '@angular/
      1 instanceof
      6 private
      1 r.
      3 t.
     11 this
      1 true
      9 try
Total operators (unfiltered): 123

with filtering:
===============
      1     styleUrls: [ './
      1     templateUrl: './
      2  .
     12 (
      1 ).
      6 ,
      9 :
     19 ;
      6 =
      3 =>
      1 [
      1 class 
      1 const
      7 e.
      1 else
      3 false
      1 g.
      2 if 
      1 implements 
      1 import debug from '../../../../
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { BlogEntry } from '../
      1 import { BlogService } from '../
      1 import { Component, OnInit } from '@angular/
      1 instanceof
      5 private
      1 r.
      3 t.
     11 this
      1 true
      9 try
Total operators N1: 114

exceptions filter:
==================
      1     //
      1 split('/').pop() === 'new') {

grep COMMENTS:
==============
    // When using AOT, all members used in the template must not be private:

grep FUNCS:
===========
                if (event['url'].split('/').pop() === 'new') {

grep SPECIALS:
==============
import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router, NavigationEnd } from '@angular/router';
import { BlogService } from '../blog.service';
import { BlogEntry } from '../model-interfaces';
import debug from '../../../../debug';

grep EXCEPTIONS:
================
    // When using AOT, all members used in the template must not be private:
                if (event['url'].split('/').pop() === 'new') {

File: src/app/modules/blog/blog.module.ts
-----------------------------
no filtering:
=============
      1 (
      5 ,
      2 :
      5 ;
      2 [
      1 class 
      1 d.
      1 g.
      1 import { BlogItemComponent } from './blog-item/
      1 import { BlogListComponent } from './blog-list/
      1 import { NgModule } from '@angular/
      1 import { SharedModule } from '../shared/
      1 import { blogRouting, blogRoutingComponents } from './
      1 m.
      1 t.
Total operators (unfiltered): 25

with filtering:
===============
      1 (
      5 ,
      2 :
      5 ;
      2 [
      1 class 
      1 d.
      1 g.
      1 import { BlogItemComponent } from './blog-item/
      1 import { BlogListComponent } from './blog-list/
      1 import { NgModule } from '@angular/
      1 import { SharedModule } from '../shared/
      1 import { blogRouting, blogRoutingComponents } from './
      1 m.
      1 t.
Total operators N1: 25

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { NgModule } from '@angular/core';
import { BlogListComponent } from './blog-list/blog-list.component';
import { BlogItemComponent } from './blog-item/blog-item.component';
import { blogRouting, blogRoutingComponents } from './blog.routing';
import { SharedModule } from '../shared/shared.module';
    imports: [

grep EXCEPTIONS:
================

File: src/app/modules/blog/blog.routing.ts
-----------------------------
no filtering:
=============
      1                 //
      1             // outlet: 'list-outlet', // aux outlet not working, bug: https://github.com/angular/angular/issues/
      1         // { path: 'items', component: BlogListComponent, outlet: 'list-outlet' }, //
      1         { path: '', component: BlogListComponent, outlet: 'list-outlet' }, //
      1         { path: ':id', // component: BlogItemComponent, //
      2 (
     19 ,
     20 :
     10 ;
      4 =
      7 [
      4 const
      2 e.
      1 import { BlogItemComponent } from './blog-item/
      1 import { BlogListComponent } from './blog-list/
      1 import { BlogPageComponent } from './blog-page/
      1 import { EditBlogEntryFormComponent } from './edit-blog-entry-form/
      1 import { LoginGuard } from '../auth/login/
      1 import { Routes, RouterModule } from '@angular/
      2 let
      2 m.
      1 n.
      1 t.
      6 try
Total operators (unfiltered): 91

with filtering:
===============
      1         { path: '', component: BlogListComponent, outlet: 'list-outlet' }, //
      1         { path: ':id', // component: BlogItemComponent, //
      1 (
     16 ,
     18 :
     10 ;
      4 =
      7 [
      4 const
      2 e.
      1 import { BlogItemComponent } from './blog-item/
      1 import { BlogListComponent } from './blog-list/
      1 import { BlogPageComponent } from './blog-page/
      1 import { EditBlogEntryFormComponent } from './edit-blog-entry-form/
      1 import { LoginGuard } from '../auth/login/
      1 import { Routes, RouterModule } from '@angular/
      1 let
      2 m.
      1 n.
      1 t.
      6 try
Total operators N1: 81

exceptions filter:
==================
      1                 //
      1             //
      1         //

grep COMMENTS:
==============
        // { path: 'items', component: BlogListComponent, outlet: 'list-outlet' }, // here, aux-outlet is NOT working (see bugs in github)
            // outlet: 'list-outlet', // aux outlet not working, bug: https://github.com/angular/angular/issues/9957
                // { path: '', component: BlogItemComponent },

grep FUNCS:
===========

grep SPECIALS:
==============
import { Routes, RouterModule } from '@angular/router';
import { BlogPageComponent } from './blog-page/blog-page.component';
import { BlogListComponent } from './blog-list/blog-list.component';
import { BlogItemComponent } from './blog-item/blog-item.component';
import { EditBlogEntryFormComponent } from './edit-blog-entry-form/edit-blog-entry-form.component';
import { LoginGuard } from '../auth/login/login.guard';

grep EXCEPTIONS:
================
        // { path: 'items', component: BlogListComponent, outlet: 'list-outlet' }, // here, aux-outlet is NOT working (see bugs in github)
            // outlet: 'list-outlet', // aux outlet not working, bug: https://github.com/angular/angular/issues/9957
                // { path: '', component: BlogItemComponent },

File: src/app/modules/blog/blog.service.mock.ts
-----------------------------
no filtering:
=============
      1  -
      3  .
      2 $.
     25 (
      1 *
     12 +
      6 :
     15 ;
      6 <
      4 =
      1 ==
      5 =>
      6 >
      1 [
      1 class 
      2 const
      2 do
      1 e.
      2 h.
      3 import 'rxjs/add/operator/
      1 import { BehaviorSubject } from 'rxjs/
      1 import { BlogEntry } from './
      1 import { Injectable } from '@angular/
      1 import { Observable } from 'rxjs/
      1 import { initialEntries } from './
      4 public
      4 return
      1 static
      1 t.
      2 this
     10 try
      1 |
Total operators (unfiltered): 127

with filtering:
===============
      1  -
      3  .
      2 $.
     25 (
      1 *
     12 +
      6 :
     15 ;
      6 <
      4 =
      1 ==
      5 =>
      6 >
      1 [
      1 class 
      2 const
      2 do
      1 e.
      2 h.
      3 import 'rxjs/add/operator/
      1 import { BehaviorSubject } from 'rxjs/
      1 import { BlogEntry } from './
      1 import { Injectable } from '@angular/
      1 import { Observable } from 'rxjs/
      1 import { initialEntries } from './
      4 public
      4 return
      1 static
      1 t.
      2 this
     10 try
      1 |
Total operators N1: 127

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import { Observable } from 'rxjs/Observable';
import 'rxjs/add/operator/find';
import 'rxjs/add/operator/do';
import 'rxjs/add/operator/map';
import { BlogEntry } from './model-interfaces';
import { initialEntries } from './initialEntries';

grep EXCEPTIONS:
================

File: src/app/modules/blog/blog.service.spec.ts
-----------------------------
no filtering:
=============
     10 (
      1 ).
      4 ,
      2 :
      8 ;
      3 =>
      2 [
      1 d.
      2 g.
      1 import { BlogService } from './
      1 import { BlogStore } from './
      1 import { TestBed, inject } from '@angular/core/
Total operators (unfiltered): 36

with filtering:
===============
     10 (
      1 ).
      4 ,
      2 :
      8 ;
      3 =>
      2 [
      1 d.
      2 g.
      1 import { BlogService } from './
      1 import { BlogStore } from './
      1 import { TestBed, inject } from '@angular/core/
Total operators N1: 36

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { TestBed, inject } from '@angular/core/testing';
import { BlogService } from './blog.service';
import { BlogStore } from './blog.store';

grep EXCEPTIONS:
================

File: src/app/modules/blog/blog.service.ts
-----------------------------
no filtering:
=============
      1         const entries = initialEntries; //
      1         this.entries$ = blogStore.entries$; //
      1         this.findEntries(); //
      2     //
      1  -
      3  .
      3 $.
     34 (
      1 *
     12 +
      4 ,
     21 :
     23 ;
      5 <
      4 =
      1 ==
      5 =>
      5 >
      1 ?
      1 [
      1 class 
      3 const
      2 do
      5 e.
      1 g.
      2 h.
      1 if 
      3 import 'rxjs/add/operator/
      1 import debug from '../../../
      1 import { BehaviorSubject } from 'rxjs/
      1 import { BlogEntry } from './
      1 import { Injectable } from '@angular/
      1 import { LOAD, ADD, EDIT, REMOVE, BlogStore } from './
      1 import { Observable } from 'rxjs/
      1 import { initialEntries } from './
      1 let
      1 private
      8 public
      6 return
      1 static
      1 t.
      8 this
     17 try
      1 |
Total operators (unfiltered): 198

with filtering:
===============
      1         const entries = initialEntries; //
      1         this.entries$ = blogStore.entries$; //
      1         this.findEntries(); //
      1  -
      3  .
      3 $.
     33 (
      1 *
     12 +
      3 ,
     18 :
     23 ;
      5 <
      4 =
      1 ==
      5 =>
      5 >
      1 ?
      1 [
      1 class 
      2 const
      2 do
      5 e.
      1 g.
      2 h.
      1 if 
      3 import 'rxjs/add/operator/
      1 import debug from '../../../
      1 import { BehaviorSubject } from 'rxjs/
      1 import { BlogEntry } from './
      1 import { Injectable } from '@angular/
      1 import { LOAD, ADD, EDIT, REMOVE, BlogStore } from './
      1 import { Observable } from 'rxjs/
      1 import { initialEntries } from './
      1 let
      7 public
      5 return
      1 static
      1 t.
      7 this
     17 try
      1 |
Total operators N1: 186

exceptions filter:
==================
      2     //
      1 constructor(private blogStore: BlogStore) {

grep COMMENTS:
==============
    // This is the public API:
    // TODO: use search params to filter data, at the moment this just return all data

grep FUNCS:
===========
    constructor(private blogStore: BlogStore) {

grep SPECIALS:
==============
import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import { Observable } from 'rxjs/Observable';
import 'rxjs/add/operator/find';
import 'rxjs/add/operator/do';
import 'rxjs/add/operator/map';
import debug from '../../../debug';
import { BlogEntry } from './model-interfaces';
import { initialEntries } from './initialEntries';
import { LOAD, ADD, EDIT, REMOVE, BlogStore } from './blog.store';

grep EXCEPTIONS:
================
    constructor(private blogStore: BlogStore) {
    // This is the public API:
    // TODO: use search params to filter data, at the moment this just return all data

File: src/app/modules/blog/blog.store.ts
-----------------------------
no filtering:
=============
      1         this.entries = this.reduce(this.entries, action); //
      1         this.entries$.next(this.entries); //
      2  .
      5  ...
      2 !=
     28 (
      1 *
     12 +
      8 ,
     12 :
     22 ;
      6 <
     10 =
      4 =>
      6 >
      4 [
      4 case
      1 class 
      6 const
      1 default
      1 do
      4 e.
      2 h.
      3 if 
      1 import debug from '../../../
      1 import { BehaviorSubject } from 'rxjs/
      1 import { BlogEntry } from './
      8 n.
      1 private
      1 public
     10 return
      2 s.
      1 static
      1 switch 
     12 try
Total operators (unfiltered): 185

with filtering:
===============
      1         this.entries = this.reduce(this.entries, action); //
      1         this.entries$.next(this.entries); //
      2  .
      5  ...
      2 !=
     26 (
      1 *
     12 +
      7 ,
     11 :
     22 ;
      5 <
     10 =
      4 =>
      5 >
      4 [
      4 case
      1 class 
      6 const
      1 default
      1 do
      4 e.
      2 h.
      3 if 
      1 import debug from '../../../
      1 import { BehaviorSubject } from 'rxjs/
      1 import { BlogEntry } from './
      8 n.
      1 private
      1 public
     10 return
      2 s.
      1 static
      1 switch 
     11 try
Total operators N1: 178

exceptions filter:
==================
      1 dispatch(action) {
      1 reduce(entries: Array<BlogEntry>, action) {

grep COMMENTS:
==============

grep FUNCS:
===========
    dispatch(action) {
    reduce(entries: Array<BlogEntry>, action) {

grep SPECIALS:
==============
import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import debug from '../../../debug';
import { BlogEntry } from './model-interfaces';

grep EXCEPTIONS:
================
    dispatch(action) {
    reduce(entries: Array<BlogEntry>, action) {

File: src/app/modules/blog/edit-blog-entry-form/edit-blog-entry-form.component.spec.ts
-----------------------------
no filtering:
=============
      1             //
      1             const form = component.form.form; //
      4         //
     35 (
      6 ).
     20 ,
     20 :
     39 ;
      1 <
      5 =
      8 =>
      1 >
      9 [
      1 const
      3 d.
      1 do
     10 e.
      2 g.
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { BlogService } from '../
      1 import { EditBlogEntryFormComponent } from './
      1 import { FormsModule } from '@angular/
      1 import { LoginService } from '../../auth/login/
      1 import { MdSnackBar } from '@angular/
      1 import { MockBlogService } from '../
      1 import { MockLoginService } from '../../auth/login/
      1 import { MockUserService } from '../../auth/user/
      1 import { NoopAnimationsModule } from '@angular/platform-browser/
      1 import { Observable } from 'rxjs/
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from '../../shared/
      1 import { UserService } from '../../auth/user/
      1 import { async, inject, ComponentFixture, TestBed } from '@angular/core/
      3 l.
      3 let
      2 m.
      2 n.
      3 r.
      1 t.
      1 true
     12 try
Total operators (unfiltered): 209

with filtering:
===============
      1             const form = component.form.form; //
     31 (
      5 ).
     19 ,
     19 :
     35 ;
      1 <
      4 =
      7 =>
      1 >
      9 [
      1 const
      3 d.
      8 e.
      2 g.
      1 import { ActivatedRoute, Router, NavigationEnd } from '@angular/
      1 import { BlogService } from '../
      1 import { EditBlogEntryFormComponent } from './
      1 import { FormsModule } from '@angular/
      1 import { LoginService } from '../../auth/login/
      1 import { MdSnackBar } from '@angular/
      1 import { MockBlogService } from '../
      1 import { MockLoginService } from '../../auth/login/
      1 import { MockUserService } from '../../auth/user/
      1 import { NoopAnimationsModule } from '@angular/platform-browser/
      1 import { Observable } from 'rxjs/
      1 import { RouterTestingModule } from '@angular/router/
      1 import { SharedModule } from '../../shared/
      1 import { UserService } from '../../auth/user/
      1 import { async, inject, ComponentFixture, TestBed } from '@angular/core/
      3 l.
      3 let
      2 m.
      2 n.
      3 r.
      1 true
      6 try
Total operators N1: 181

exceptions filter:
==================
      1             //
      4         //

grep COMMENTS:
==============
        // blogService.getEntry('dc2a4182-71a0-4fed-98dd-22b4d5104e40').subscribe(entry => {
        //     console.log('test setting entry to: ', entry);
        //     component.entry = entry;
        // });
            // done();

grep FUNCS:
===========

grep SPECIALS:
==============
import { async, inject, ComponentFixture, TestBed } from '@angular/core/testing';
import { FormsModule } from '@angular/forms';
import { Observable } from 'rxjs/Rx';
import { RouterTestingModule } from '@angular/router/testing';
import { ActivatedRoute, Router, NavigationEnd } from '@angular/router';
import { MdSnackBar } from '@angular/material';
import { NoopAnimationsModule } from '@angular/platform-browser/animations';
import { EditBlogEntryFormComponent } from './edit-blog-entry-form.component';
import { SharedModule } from '../../shared/shared.module';
import { BlogService } from '../blog.service';
import { MockBlogService } from '../blog.service.mock';
import { LoginService } from '../../auth/login/login.service';
import { MockLoginService } from '../../auth/login/login.service.mock';
import { UserService } from '../../auth/user/user.service';
import { MockUserService } from '../../auth/user/user.service.mock';
            imports: [

grep EXCEPTIONS:
================
        // blogService.getEntry('dc2a4182-71a0-4fed-98dd-22b4d5104e40').subscribe(entry => {
        //     console.log('test setting entry to: ', entry);
        //     component.entry = entry;
        // });
            // done();

File: src/app/modules/blog/edit-blog-entry-form/edit-blog-entry-form.component.ts
-----------------------------
no filtering:
=============
      1         this.router.navigate([ '..' ]); // Bug: Goes back to /
      1         this.router.navigate([ '..' ]); // Bug?: Goes back to /
      2     //
      1     @Input() inputEntry: BlogEntry; //
      1     @ViewChild(NgForm) form: NgForm; //
      1     styleUrls: [ './
      1     templateUrl: './
      4  .
      2  ...
      4 !
      2 !=
      1 &&
     34 (
      1 ).
     21 ,
     20 :
     33 ;
     13 =
      2 ==
      4 =>
      1 ?
      2 [
      1 ].
      1 class 
      2 const
      9 e.
      5 false
      1 for 
      1 g.
      5 if 
      1 implements 
      2 import 
      1 import 'rxjs/add/operator/
      1 import debug from '../../../../
      1 import { ActivatedRoute, Router } from '@angular/
      1 import { BlogEntry } from '../
      1 import { BlogService } from '../
      1 import { LoginService } from '../../auth/login/
      1 import { MdSnackBar } from '@angular/
      1 import { NgForm } from '@angular/
      1 import { Subscription } from 'rxjs/
      3 m.
      1 n.
      8 private
      1 r.
      5 return
      4 t.
     27 this
      1 true
     33 try
      1 } from '@angular/
Total operators (unfiltered): 273

with filtering:
===============
      1         this.router.navigate([ '..' ]); // Bug: Goes back to /
      1         this.router.navigate([ '..' ]); // Bug?: Goes back to /
      1     @Input() inputEntry: BlogEntry; //
      1     @ViewChild(NgForm) form: NgForm; //
      1     styleUrls: [ './
      1     templateUrl: './
      4  .
      2  ...
      3 !
      2 !=
      1 &&
     31 (
      1 ).
     21 ,
     17 :
     33 ;
     13 =
      2 ==
      4 =>
      1 ?
      2 [
      1 ].
      1 class 
      2 const
      9 e.
      5 false
      1 for 
      1 g.
      5 if 
      1 implements 
      2 import 
      1 import 'rxjs/add/operator/
      1 import debug from '../../../../
      1 import { ActivatedRoute, Router } from '@angular/
      1 import { BlogEntry } from '../
      1 import { BlogService } from '../
      1 import { LoginService } from '../../auth/login/
      1 import { MdSnackBar } from '@angular/
      1 import { NgForm } from '@angular/
      1 import { Subscription } from 'rxjs/
      3 m.
      1 n.
      8 private
      1 r.
      5 return
      4 t.
     27 this
      1 true
     30 try
      1 } from '@angular/
Total operators N1: 261

exceptions filter:
==================
      2     //
      1 entry(entry: BlogEntry) {
      1 ubmit(formValue: any) {

grep COMMENTS:
==============
    // TODO: find a way to mark the form as pristine when
    // cancelling (still keeping the old values!)

grep FUNCS:
===========
    set entry(entry: BlogEntry) {
    onSubmit(formValue: any) {

grep SPECIALS:
==============
import {
import { NgForm } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { Subscription } from 'rxjs/Subscription';
import 'rxjs/add/operator/mergeMap';
import debug from '../../../../debug';
import { MdSnackBar } from '@angular/material';
import _ from 'lodash';
import { BlogEntry } from '../model-interfaces';
import { BlogService } from '../blog.service';
import { LoginService } from '../../auth/login/login.service';

grep EXCEPTIONS:
================
    set entry(entry: BlogEntry) {
    onSubmit(formValue: any) {
    // TODO: find a way to mark the form as pristine when
    // cancelling (still keeping the old values!)

File: src/app/modules/blog/initialEntries.ts
-----------------------------
no filtering:
=============
     24 ,
     31 :
      2 ;
      1 =
      4 [
      1 const
      1 import { BlogEntry } from './
      1 try
      3 1.
      1 2.
      1 3.
Total operators (unfiltered): 70

with filtering:
===============
     24 ,
     31 :
      2 ;
      1 =
      4 [
      1 const
      1 import { BlogEntry } from './
      1 try
      3 1.
      1 2.
      1 3.
Total operators N1: 70

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { BlogEntry } from './model-interfaces';

grep EXCEPTIONS:
================

File: src/app/modules/blog/model-interfaces.ts
-----------------------------
no filtering:
=============
      1     author?: string; //
      1     user?: string; //
      1  */
      1 (
      3 *
      1 ,
      7 :
      7 ;
      7 ?
      1 [
      1 for 
      2 interface 
      1 try
Total operators (unfiltered): 34

with filtering:
===============
      1     author?: string; //
      1     user?: string; //
      1 (
      7 :
      7 ;
      7 ?
      1 [
      2 interface 
      1 try
Total operators N1: 28

exceptions filter:
==================
      2  *
      1 /**

grep COMMENTS:
==============
/**
 * In Typescript, interfaces are only used for type-safety
 */

grep FUNCS:
===========

grep SPECIALS:
==============

grep EXCEPTIONS:
================
/**
 * In Typescript, interfaces are only used for type-safety
 */

File: src/app/modules/shared/dateFormat.pipe.ts
-----------------------------
no filtering:
=============
      6 (
      2 ,
      3 :
      7 ;
      3 =
      1 M.
      1 class 
      2 const
      1 d.
      1 e.
      1 implements 
      1 import { DatePipe } from '@angular/
      1 import { Inject, LOCALE_ID, Pipe, PipeTransform } from '@angular/
      1 return
      2 this
Total operators (unfiltered): 33

with filtering:
===============
      3 (
      2 ,
      2 :
      7 ;
      3 =
      1 M.
      1 class 
      1 const
      1 d.
      1 e.
      1 implements 
      1 import { DatePipe } from '@angular/
      1 import { Inject, LOCALE_ID, Pipe, PipeTransform } from '@angular/
      1 return
      2 this
Total operators N1: 28

exceptions filter:
==================
      1 constructor(@Inject(LOCALE_ID) locale_id) {
      1 transform(value: string) {

grep COMMENTS:
==============

grep FUNCS:
===========
    constructor(@Inject(LOCALE_ID) locale_id) {
    transform(value: string) {

grep SPECIALS:
==============
import { Inject, LOCALE_ID, Pipe, PipeTransform } from '@angular/core';
import { DatePipe } from '@angular/common';

grep EXCEPTIONS:
================
    constructor(@Inject(LOCALE_ID) locale_id) {
    transform(value: string) {

File: src/app/modules/shared/navbar/navbar.component.spec.ts
-----------------------------
no filtering:
=============
      1  .
     15 (
      1 ).
      2 ,
      3 :
     13 ;
      1 <
      2 =
      4 =>
      1 >
      1 [
      2 d.
      2 e.
      1 import { NavBarComponent } from './
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      2 let
      1 r.
Total operators (unfiltered): 53

with filtering:
===============
      1  .
     15 (
      1 ).
      2 ,
      3 :
     13 ;
      1 <
      2 =
      4 =>
      1 >
      1 [
      2 d.
      2 e.
      1 import { NavBarComponent } from './
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      2 let
      1 r.
Total operators N1: 53

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { async, ComponentFixture, TestBed } from '@angular/core/testing';
import { NavBarComponent } from './navbar.component';

grep EXCEPTIONS:
================

File: src/app/modules/shared/navbar/navbar.component.ts
-----------------------------
no filtering:
=============
      1     styleUrls: [ './
      1     templateUrl: './
      1 (
      3 ,
      1 :
      1 ;
      1 class 
      1 import { Component } from '@angular/
      2 r.
      2 t.
Total operators (unfiltered): 14

with filtering:
===============
      1     styleUrls: [ './
      1     templateUrl: './
      1 (
      3 ,
      1 :
      1 ;
      1 class 
      1 import { Component } from '@angular/
      2 r.
      2 t.
Total operators N1: 14

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { Component } from '@angular/core';

grep EXCEPTIONS:
================

File: src/app/modules/shared/navigation.service.ts
-----------------------------
no filtering:
=============
      1         //
      1         const redirect = queryParams['redirect'] || '/
      1         this.router.navigate([ '..' ]); // Bug: Goes back to /
      6 (
      1 ,
      2 :
      5 ;
      1 =
      1 class 
      2 const
      1 e.
      1 import { ActivatedRoute, Router } from '@angular/
      1 import { Injectable } from '@angular/
      2 private
      1 r.
      1 t.
      2 this
Total operators (unfiltered): 30

with filtering:
===============
      1         const redirect = queryParams['redirect'] || '/
      1         this.router.navigate([ '..' ]); // Bug: Goes back to /
      4 (
      1 ,
      2 :
      4 ;
      1 class 
      1 const
      1 import { ActivatedRoute, Router } from '@angular/
      1 import { Injectable } from '@angular/
      2 private
      1 r.
      1 this
Total operators N1: 21

exceptions filter:
==================
      1         //
      1 ack(queryParams) {
      1 ome(queryParams) {

grep COMMENTS:
==============
        // const queryParams = this.activatedRoute.snapshot.queryParams;

grep FUNCS:
===========
    navigateHome(queryParams) {
    navigateBack(queryParams) {

grep SPECIALS:
==============
import { Injectable } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';

grep EXCEPTIONS:
================
    navigateHome(queryParams) {
        // const queryParams = this.activatedRoute.snapshot.queryParams;
    navigateBack(queryParams) {

File: src/app/modules/shared/shared.module.ts
-----------------------------
no filtering:
=============
      5     //
      2 !
      4 (
     23 ,
      1 // module, even services that ought to be available shared/
      7 :
     17 ;
      4 [
      1 class 
      1 do
      1 e.
      1 for 
      3 g.
      2 import 
      1 import { BlogService } from '../blog/
      1 import { BlogStore } from '../blog/
      1 import { CommonModule } from '@angular/
      1 import { DateFormatPipe } from './
      1 import { FormsModule } from '@angular/
      1 import { HttpModule } from '@angular/
      1 import { LoginGuard } from '../auth/login/
      1 import { LoginService } from '../auth/login/
      1 import { MdSnackBarModule } from '@angular/
      1 import { ModuleWithProviders, NgModule } from '@angular/
      1 import { NavBarComponent } from './navbar/
      1 import { NavigationService } from './
      1 import { RouterModule } from '@angular/
      1 import { ShowErrorComponent } from './show-error/
      1 import { UserService } from '../auth/user/
      1 import { UserStore } from '../auth/user/
      1 l.
      4 n.
      4 r.
      1 return
      2 static
      1 t.
Total operators (unfiltered): 101

with filtering:
===============
      2 (
     21 ,
      6 :
     17 ;
      4 [
      1 class 
      2 g.
      1 import { BlogService } from '../blog/
      1 import { BlogStore } from '../blog/
      1 import { CommonModule } from '@angular/
      1 import { DateFormatPipe } from './
      1 import { FormsModule } from '@angular/
      1 import { HttpModule } from '@angular/
      1 import { LoginGuard } from '../auth/login/
      1 import { LoginService } from '../auth/login/
      1 import { MdSnackBarModule } from '@angular/
      1 import { ModuleWithProviders, NgModule } from '@angular/
      1 import { NavBarComponent } from './navbar/
      1 import { NavigationService } from './
      1 import { RouterModule } from '@angular/
      1 import { ShowErrorComponent } from './show-error/
      1 import { UserService } from '../auth/user/
      1 import { UserStore } from '../auth/user/
      3 n.
      4 r.
      1 return
      1 static
      1 t.
Total operators N1: 79

exceptions filter:
==================
      5     //
      7 //

grep COMMENTS:
==============
// Some services from their respective modules need to be availabe
// for other modules too, so we import them here. This still is
// not a clean solution. This has to do with the quite special
// concept of a "module" in angular: The module in the first place
// is about handling lazy-loading, not about organizing. Even though
// it makes sense to have everything located in the corresponding
// module, even services that ought to be available shared/global.
    // Service providers have to be put here instead of
    // the @NgModule annotation! This static addition to the
    // Module has to be imported in root App Module only!
    // The other modules only import the Module itself (without
    // forRoot() )

grep FUNCS:
===========

grep SPECIALS:
==============
import { ModuleWithProviders, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { HttpModule } from '@angular/http';
import { RouterModule } from '@angular/router';
import { MdSnackBarModule } from '@angular/material';
import { NavBarComponent } from './navbar/navbar.component';
import { ShowErrorComponent } from './show-error/show-error.component';
import { DateFormatPipe } from './dateFormat.pipe';
import { NavigationService } from './navigation.service';
// for other modules too, so we import them here. This still is
import { BlogService } from '../blog/blog.service';
import { BlogStore } from '../blog/blog.store';
import { LoginService } from '../auth/login/login.service';
import { UserService } from '../auth/user/user.service';
import { UserStore } from '../auth/user/user.store';
import { LoginGuard } from '../auth/login/login.guard';
    imports: [
    // Module has to be imported in root App Module only!
    // The other modules only import the Module itself (without

grep EXCEPTIONS:
================
// Some services from their respective modules need to be availabe
// for other modules too, so we import them here. This still is
// not a clean solution. This has to do with the quite special
// concept of a "module" in angular: The module in the first place
// is about handling lazy-loading, not about organizing. Even though
// it makes sense to have everything located in the corresponding
// module, even services that ought to be available shared/global.
    // Service providers have to be put here instead of
    // the @NgModule annotation! This static addition to the
    // Module has to be imported in root App Module only!
    // The other modules only import the Module itself (without
    // forRoot() )

File: src/app/modules/shared/show-error/show-error.component.spec.ts
-----------------------------
no filtering:
=============
      1             providers: [NgForm], //
     15 (
      2 ).
      2 ,
      3 :
     14 ;
      1 <
      2 =
      4 =>
      1 >
      1 [
      2 d.
      2 e.
      1 import { NgForm } from '@angular/
      1 import { ShowErrorComponent } from './
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      2 let
      1 r.
Total operators (unfiltered): 56

with filtering:
===============
      1             providers: [NgForm], //
     15 (
      2 ).
      2 ,
      3 :
     14 ;
      1 <
      2 =
      4 =>
      1 >
      1 [
      2 d.
      2 e.
      1 import { NgForm } from '@angular/
      1 import { ShowErrorComponent } from './
      1 import { async, ComponentFixture, TestBed } from '@angular/core/
      2 let
      1 r.
Total operators N1: 56

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { async, ComponentFixture, TestBed } from '@angular/core/testing';
import { NgForm } from '@angular/forms';
import { ShowErrorComponent } from './show-error.component';

grep EXCEPTIONS:
================

File: src/app/modules/shared/show-error/show-error.component.ts
-----------------------------
no filtering:
=============
      1     styleUrls: [ './
      1     templateUrl: './
      3 !
     14 (
      2 ,
      7 :
     18 ;
     10 =
      3 [
      2 break
      2 case
      1 class 
      7 const
      1 default
      1 for 
      2 if 
      1 import { Component, Input } from '@angular/
      1 import { NgForm, FormGroup } from '@angular/
      5 l.
      1 let
      2 m.
      1 private
      3 r.
      2 return
      2 s.
      1 switch 
      2 t.
      4 this
      2 ||
Total operators (unfiltered): 102

with filtering:
===============
      1     styleUrls: [ './
      1     templateUrl: './
      3 !
     13 (
      2 ,
      6 :
     18 ;
     10 =
      3 [
      2 break
      2 case
      1 class 
      6 const
      1 default
      1 for 
      2 if 
      1 import { Component, Input } from '@angular/
      1 import { NgForm, FormGroup } from '@angular/
      5 l.
      1 let
      2 m.
      3 r.
      2 return
      2 s.
      1 switch 
      2 t.
      4 this
      2 ||
Total operators N1: 98

exceptions filter:
==================
      1 constructor(private ngForm: NgForm) {

grep COMMENTS:
==============

grep FUNCS:
===========
    constructor(private ngForm: NgForm) { }

grep SPECIALS:
==============
import { Component, Input } from '@angular/core';
import { NgForm, FormGroup } from '@angular/forms';

grep EXCEPTIONS:
================
    constructor(private ngForm: NgForm) { }

File: src/debug.ts
-----------------------------
no filtering:
=============
      2 ;
      1 =
      1 const
      1 default
      1 false
Total operators (unfiltered): 6

with filtering:
===============
      2 ;
      1 =
      1 const
      1 default
      1 false
Total operators N1: 6

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============

grep EXCEPTIONS:
================

File: src/environments/environment.prod.ts
-----------------------------
no filtering:
=============
      1 :
      1 ;
      1 =
      1 const
      1 true
Total operators (unfiltered): 5

with filtering:
===============
      1 :
      1 ;
      1 =
      1 const
      1 true
Total operators N1: 5

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============

grep EXCEPTIONS:
================

File: src/environments/environment.ts
-----------------------------
no filtering:
=============
      1  -
      1 ,
      1 :
      1 ;
      2 =
      2 `.
      1 const
      3 d.
      1 default
      1 do
      1 false
      1 for 
      1 i.
      1 if 
      2 t.
Total operators (unfiltered): 20

with filtering:
===============
      1 :
      1 ;
      1 =
      1 const
      1 false
Total operators N1: 5

exceptions filter:
==================
      4 //

grep COMMENTS:
==============
// The file contents for the current environment will overwrite these during build.
// The build system defaults to the dev environment which uses `environment.ts`, but if you do
// `ng build --env=prod` then `environment.prod.ts` will be used instead.
// The list of which env maps to which file can be found in `.angular-cli.json`.

grep FUNCS:
===========

grep SPECIALS:
==============

grep EXCEPTIONS:
================
// The file contents for the current environment will overwrite these during build.
// The build system defaults to the dev environment which uses `environment.ts`, but if you do
// `ng build --env=prod` then `environment.prod.ts` will be used instead.
// The list of which env maps to which file can be found in `.angular-cli.json`.

File: src/main.ts
-----------------------------
no filtering:
=============
      4 (
      1 ).
      6 ;
      1 if 
      1 import { AppModule } from './app/
      1 import { enableProdMode } from '@angular/
      1 import { environment } from './environments/
      1 import { platformBrowserDynamic } from '@angular/
      1 p.
      1 t.
Total operators (unfiltered): 18

with filtering:
===============
      4 (
      1 ).
      6 ;
      1 if 
      1 import { AppModule } from './app/
      1 import { enableProdMode } from '@angular/
      1 import { environment } from './environments/
      1 import { platformBrowserDynamic } from '@angular/
      1 p.
      1 t.
Total operators N1: 18

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============
import { enableProdMode } from '@angular/core';
import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
import { AppModule } from './app/app.module';
import { environment } from './environments/environment';

grep EXCEPTIONS:
================

File: src/polyfills.ts
-----------------------------
no filtering:
=============
      1  * Learn more in https://angular.io/docs/ts/latest/guide/
      5  */
      4  -
      1 (
    318 *
      8 ,
      1 /** ALL Firefox browsers require the following to support `@angular/animation`. **/
      1 /** Evergreen browsers require these. **/
      1 /** IE10 and IE11 requires the following for NgClass support on SVG elements */
      1 /** IE10 and IE11 requires the following to support `@angular/animation`. */
      1 /** IE9, IE10 and IE11 requires all of the following polyfills. **/
      1 // import 'classlist.js';  //
     13 // import 'core-js/es6/
      1 // import 'intl';  //
      2 // import 'web-animations-js';  //
      2 :
     16 ;
      3 >=
      1 I.
      4 `.
      3 e.
      1 f.
      1 for 
      1 import 'core-js/es6/
      1 import 'core-js/es7/
      1 import 'zone.js/dist/zone';  //
      1 p.
      5 s.
      2 t.
      1 this
      1 1.
      1 2.
Total operators (unfiltered): 404

with filtering:
===============
      2 ;
      1 I.
      1 import 'core-js/es6/
      1 import 'core-js/es7/
      1 import 'zone.js/dist/zone';  //
Total operators N1: 6

exceptions filter:
==================
     23  *
     10 /**
     17 //

grep COMMENTS:
==============
/**
 * This file includes polyfills needed by Angular and is loaded before the app.
 * You can add your own extra polyfills to this file.
 *
 * This file is divided into 2 sections:
 *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.
 *   2. Application imports. Files imported after ZoneJS that should be loaded before your main
 *      file.
 *
 * The current setup is for so-called "evergreen" browsers; the last versions of browsers that
 * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),
 * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.
 *
 * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html
 */
/***************************************************************************************************
 * BROWSER POLYFILLS
 */
/** IE9, IE10 and IE11 requires all of the following polyfills. **/
// import 'core-js/es6/symbol';
// import 'core-js/es6/object';
// import 'core-js/es6/function';
// import 'core-js/es6/parse-int';
// import 'core-js/es6/parse-float';
// import 'core-js/es6/number';
// import 'core-js/es6/math';
// import 'core-js/es6/string';
// import 'core-js/es6/date';
// import 'core-js/es6/array';
// import 'core-js/es6/regexp';
// import 'core-js/es6/map';
// import 'core-js/es6/set';
/** IE10 and IE11 requires the following for NgClass support on SVG elements */
// import 'classlist.js';  // Run `npm install --save classlist.js`.
/** IE10 and IE11 requires the following to support `@angular/animation`. */
// import 'web-animations-js';  // Run `npm install --save web-animations-js`.
/** Evergreen browsers require these. **/
/** ALL Firefox browsers require the following to support `@angular/animation`. **/
// import 'web-animations-js';  // Run `npm install --save web-animations-js`.
/***************************************************************************************************
 * Zone JS is required by Angular itself.
 */
/***************************************************************************************************
 * APPLICATION IMPORTS
 */
/**
 * Date, currency, decimal and percent pipes.
 * Needed for: All but Chrome, Firefox, Edge, IE11 and Safari 10
 */
// import 'intl';  // Run `npm install --save intl`.

grep FUNCS:
===========

grep SPECIALS:
==============
 *   2. Application imports. Files imported after ZoneJS that should be loaded before your main
// import 'core-js/es6/symbol';
// import 'core-js/es6/object';
// import 'core-js/es6/function';
// import 'core-js/es6/parse-int';
// import 'core-js/es6/parse-float';
// import 'core-js/es6/number';
// import 'core-js/es6/math';
// import 'core-js/es6/string';
// import 'core-js/es6/date';
// import 'core-js/es6/array';
// import 'core-js/es6/regexp';
// import 'core-js/es6/map';
// import 'core-js/es6/set';
// import 'classlist.js';  // Run `npm install --save classlist.js`.
// import 'web-animations-js';  // Run `npm install --save web-animations-js`.
import 'core-js/es6/reflect';
import 'core-js/es7/reflect';
// import 'web-animations-js';  // Run `npm install --save web-animations-js`.
import 'zone.js/dist/zone';  // Included with Angular CLI.
// import 'intl';  // Run `npm install --save intl`.

grep EXCEPTIONS:
================
/**
 * This file includes polyfills needed by Angular and is loaded before the app.
 * You can add your own extra polyfills to this file.
 *
 * This file is divided into 2 sections:
 *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.
 *   2. Application imports. Files imported after ZoneJS that should be loaded before your main
 *      file.
 *
 * The current setup is for so-called "evergreen" browsers; the last versions of browsers that
 * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),
 * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.
 *
 * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html
 */
/***************************************************************************************************
 * BROWSER POLYFILLS
 */
/** IE9, IE10 and IE11 requires all of the following polyfills. **/
// import 'core-js/es6/symbol';
// import 'core-js/es6/object';
// import 'core-js/es6/function';
// import 'core-js/es6/parse-int';
// import 'core-js/es6/parse-float';
// import 'core-js/es6/number';
// import 'core-js/es6/math';
// import 'core-js/es6/string';
// import 'core-js/es6/date';
// import 'core-js/es6/array';
// import 'core-js/es6/regexp';
// import 'core-js/es6/map';
// import 'core-js/es6/set';
/** IE10 and IE11 requires the following for NgClass support on SVG elements */
// import 'classlist.js';  // Run `npm install --save classlist.js`.
/** IE10 and IE11 requires the following to support `@angular/animation`. */
// import 'web-animations-js';  // Run `npm install --save web-animations-js`.
/** Evergreen browsers require these. **/
/** ALL Firefox browsers require the following to support `@angular/animation`. **/
// import 'web-animations-js';  // Run `npm install --save web-animations-js`.
/***************************************************************************************************
 * Zone JS is required by Angular itself.
 */
/***************************************************************************************************
 * APPLICATION IMPORTS
 */
/**
 * Date, currency, decimal and percent pipes.
 * Needed for: All but Chrome, Firefox, Edge, IE11 and Safari 10
 */
// import 'intl';  // Run `npm install --save intl`.

File: src/test.ts
-----------------------------
no filtering:
=============
      1  .
      7 (
      2 ).
      4 ,
      2 :
     15 ;
      1 =
      2 _.
      1 a.
      1 const context = require.context('./', true, /\.spec\.ts$/
      1 e.
      1 f.
      1 for 
      1 import 
      6 import 'zone.js/dist/
      1 import { getTestBed } from '@angular/core/
      3 s.
      2 t.
      3 y.
      1 } from '@angular/platform-browser-dynamic/
Total operators (unfiltered): 56

with filtering:
===============
      6 (
      2 ).
      2 ,
      2 :
     14 ;
      1 _.
      1 const context = require.context('./', true, /\.spec\.ts$/
      1 import 
      6 import 'zone.js/dist/
      1 import { getTestBed } from '@angular/core/
      1 t.
      1 y.
      1 } from '@angular/platform-browser-dynamic/
Total operators N1: 39

exceptions filter:
==================
      7 //
      1 function 

grep COMMENTS:
==============
// This file is required by karma.conf.js and loads recursively all the .spec and framework files
// Unfortunately there's no typing for the `__karma__` variable. Just declare it as any.
// Prevent Karma from running prematurely.
// First, initialize the Angular testing environment.
// Then we find all the tests.
// And load the modules.
// Finally, start Karma to run the tests.

grep FUNCS:
===========
__karma__.loaded = function () {};

grep SPECIALS:
==============
import 'zone.js/dist/long-stack-trace-zone';
import 'zone.js/dist/proxy.js';
import 'zone.js/dist/sync-test';
import 'zone.js/dist/jasmine-patch';
import 'zone.js/dist/async-test';
import 'zone.js/dist/fake-async-test';
import { getTestBed } from '@angular/core/testing';
import {

grep EXCEPTIONS:
================
// This file is required by karma.conf.js and loads recursively all the .spec and framework files
// Unfortunately there's no typing for the `__karma__` variable. Just declare it as any.
// Prevent Karma from running prematurely.
__karma__.loaded = function () {};
// First, initialize the Angular testing environment.
// Then we find all the tests.
// And load the modules.
// Finally, start Karma to run the tests.

File: src/typings.d.ts
-----------------------------
no filtering:
=============
      1 /* SystemJS module definition */
      2 :
      2 ;
      1 interface 
Total operators (unfiltered): 6

with filtering:
===============
      1 /* SystemJS module definition */
      2 :
      2 ;
      1 interface 
Total operators N1: 6

exceptions filter:
==================

grep COMMENTS:
==============

grep FUNCS:
===========

grep SPECIALS:
==============

grep EXCEPTIONS:
================

